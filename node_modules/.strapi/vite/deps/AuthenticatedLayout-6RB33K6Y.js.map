{
  "version": 3,
  "sources": ["../../../@strapi/admin/package.json", "../../../@strapi/admin/admin/src/components/MainNav/MainNav.tsx", "../../../@strapi/admin/admin/src/components/MainNav/NavLink.tsx", "../../../@strapi/admin/admin/src/components/MainNav/MainNavLinks.tsx", "../../../@strapi/admin/admin/src/components/MainNav/NavBrand.tsx", "../../../@strapi/admin/admin/src/components/MainNav/NavUser.tsx", "../../../@strapi/admin/admin/src/components/MainNav/NavBurgerMenu.tsx", "../../../@strapi/admin/admin/src/components/MainNav/TrialCountdown.tsx", "../../../@strapi/admin/admin/src/components/LeftMenu.tsx", "../../../@strapi/admin/admin/src/components/PluginsInitializer.tsx", "../../../@strapi/admin/admin/src/components/UpsellBanner.tsx", "../../../@strapi/admin/admin/src/hooks/useMenu.ts", "../../../@strapi/admin/admin/src/layouts/AuthenticatedLayout.tsx"],
  "sourcesContent": ["{\n  \"name\": \"@strapi/admin\",\n  \"version\": \"5.27.0\",\n  \"description\": \"Strapi Admin\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/strapi/strapi.git\"\n  },\n  \"license\": \"SEE LICENSE IN LICENSE\",\n  \"author\": {\n    \"name\": \"Strapi Solutions SAS\",\n    \"email\": \"hi@strapi.io\",\n    \"url\": \"https://strapi.io\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"Strapi Solutions SAS\",\n      \"email\": \"hi@strapi.io\",\n      \"url\": \"https://strapi.io\"\n    }\n  ],\n  \"exports\": {\n    \"./strapi-admin\": {\n      \"types\": \"./dist/admin/src/index.d.ts\",\n      \"source\": \"./admin/src/index.ts\",\n      \"import\": \"./dist/admin/index.mjs\",\n      \"require\": \"./dist/admin/index.js\",\n      \"default\": \"./dist/admin/index.js\"\n    },\n    \"./strapi-admin/ee\": {\n      \"types\": \"./dist/admin/src/ee.d.ts\",\n      \"source\": \"./admin/src/ee.ts\",\n      \"import\": \"./dist/admin/ee.mjs\",\n      \"require\": \"./dist/admin/ee.js\",\n      \"default\": \"./dist/admin/ee.js\"\n    },\n    \"./strapi-admin/test\": {\n      \"types\": \"./dist/admin/tests/index.d.ts\",\n      \"source\": \"./admin/tests/index.ts\",\n      \"import\": \"./dist/admin/test.mjs\",\n      \"require\": \"./dist/admin/test.js\",\n      \"default\": \"./dist/admin/test.js\"\n    },\n    \"./_internal\": {\n      \"types\": \"./dist/_internal/index.d.ts\",\n      \"source\": \"./_internal/index.ts\",\n      \"import\": \"./dist/_internal.mjs\",\n      \"require\": \"./dist/_internal.js\",\n      \"default\": \"./dist/_internal.js\"\n    },\n    \"./strapi-server\": {\n      \"types\": \"./dist/server/src/index.d.ts\",\n      \"source\": \"./server/src/index.js\",\n      \"import\": \"./dist/server/index.mjs\",\n      \"require\": \"./dist/server/index.js\",\n      \"default\": \"./dist/server/index.js\"\n    },\n    \"./package.json\": \"./package.json\"\n  },\n  \"files\": [\n    \"dist/\"\n  ],\n  \"scripts\": {\n    \"build\": \"run -T npm-run-all clean --parallel build:code build:types\",\n    \"build:code\": \"run -T rollup -c\",\n    \"build:types\": \"run -T run-p build:types:server build:types:admin build:types:internals\",\n    \"build:types:internals\": \"run -T tsc -p tsconfig.build.json --emitDeclarationOnly\",\n    \"build:types:server\": \"run -T tsc -p server/tsconfig.build.json --emitDeclarationOnly\",\n    \"build:types:admin\": \"run -T tsc -p admin/tsconfig.build.json --emitDeclarationOnly\",\n    \"clean\": \"run -T rimraf ./dist\",\n    \"lint\": \"run -T eslint .\",\n    \"test:front\": \"run -T cross-env IS_EE=true jest --config ./jest.config.front.js\",\n    \"test:front:watch\": \"run -T cross-env IS_EE=true jest --config ./jest.config.front.js --watchAll\",\n    \"test:ts\": \"run -T tsc -p tsconfig.json\",\n    \"test:ts:back\": \"run -T tsc --noEmit -p server/tsconfig.json\",\n    \"test:ts:front\": \"run -T tsc -p admin/tsconfig.json && run -T tsc -p ee/admin/tsconfig.json\",\n    \"test:unit\": \"run -T jest\",\n    \"test:unit:watch\": \"run -T jest --watch\",\n    \"watch\": \"run -T rollup -c -w\"\n  },\n  \"dependencies\": {\n    \"@casl/ability\": \"6.5.0\",\n    \"@internationalized/date\": \"3.5.4\",\n    \"@radix-ui/react-context\": \"1.0.1\",\n    \"@radix-ui/react-toolbar\": \"1.0.4\",\n    \"@reduxjs/toolkit\": \"1.9.7\",\n    \"@strapi/design-system\": \"2.0.0-rc.30\",\n    \"@strapi/icons\": \"2.0.0-rc.30\",\n    \"@strapi/permissions\": \"5.27.0\",\n    \"@strapi/types\": \"5.27.0\",\n    \"@strapi/typescript-utils\": \"5.27.0\",\n    \"@strapi/utils\": \"5.27.0\",\n    \"@testing-library/dom\": \"10.1.0\",\n    \"@testing-library/react\": \"15.0.7\",\n    \"@testing-library/user-event\": \"14.5.2\",\n    \"axios\": \"1.12.2\",\n    \"bcryptjs\": \"2.4.3\",\n    \"boxen\": \"5.1.2\",\n    \"chalk\": \"^4.1.2\",\n    \"codemirror5\": \"npm:codemirror@^5.65.11\",\n    \"cross-env\": \"^7.0.3\",\n    \"date-fns\": \"2.30.0\",\n    \"execa\": \"5.1.1\",\n    \"fast-deep-equal\": \"3.1.3\",\n    \"formik\": \"2.4.5\",\n    \"fractional-indexing\": \"3.2.0\",\n    \"fs-extra\": \"11.2.0\",\n    \"highlight.js\": \"^10.4.1\",\n    \"immer\": \"9.0.21\",\n    \"inquirer\": \"8.2.5\",\n    \"invariant\": \"^2.2.4\",\n    \"is-localhost-ip\": \"2.0.0\",\n    \"json-logic-js\": \"2.0.5\",\n    \"jsonwebtoken\": \"9.0.0\",\n    \"koa\": \"2.16.1\",\n    \"koa-compose\": \"4.1.0\",\n    \"koa-passport\": \"6.0.0\",\n    \"koa-static\": \"5.0.0\",\n    \"koa2-ratelimit\": \"^1.1.3\",\n    \"lodash\": \"4.17.21\",\n    \"ora\": \"5.4.1\",\n    \"p-map\": \"4.0.0\",\n    \"passport-local\": \"1.0.0\",\n    \"pluralize\": \"8.0.0\",\n    \"punycode\": \"2.3.1\",\n    \"qs\": \"6.11.1\",\n    \"react-dnd\": \"16.0.1\",\n    \"react-dnd-html5-backend\": \"16.0.1\",\n    \"react-intl\": \"6.6.2\",\n    \"react-is\": \"^18.2.0\",\n    \"react-query\": \"3.39.3\",\n    \"react-redux\": \"8.1.3\",\n    \"react-select\": \"5.8.0\",\n    \"react-window\": \"1.8.10\",\n    \"rimraf\": \"5.0.5\",\n    \"sanitize-html\": \"2.13.0\",\n    \"scheduler\": \"0.23.0\",\n    \"semver\": \"7.5.4\",\n    \"sift\": \"16.0.1\",\n    \"typescript\": \"5.4.4\",\n    \"use-context-selector\": \"1.4.1\",\n    \"yup\": \"0.32.9\",\n    \"zod\": \"3.25.67\"\n  },\n  \"devDependencies\": {\n    \"@strapi/admin-test-utils\": \"5.27.0\",\n    \"@strapi/data-transfer\": \"5.27.0\",\n    \"@types/codemirror5\": \"npm:@types/codemirror@^5.60.15\",\n    \"@types/fs-extra\": \"11.0.4\",\n    \"@types/invariant\": \"2.2.36\",\n    \"@types/json-logic-js\": \"2.0.8\",\n    \"@types/jsonwebtoken\": \"9.0.3\",\n    \"@types/koa-passport\": \"6.0.1\",\n    \"@types/lodash\": \"^4.14.191\",\n    \"@types/markdown-it\": \"13.0.7\",\n    \"@types/markdown-it-container\": \"2.0.9\",\n    \"@types/markdown-it-emoji\": \"2.0.4\",\n    \"@types/markdown-it-footnote\": \"3.0.3\",\n    \"@types/passport-local\": \"1.0.36\",\n    \"@types/pluralize\": \"0.0.32\",\n    \"@types/punycode\": \"2.1.4\",\n    \"@types/react-window\": \"1.8.8\",\n    \"@types/sanitize-html\": \"2.13.0\",\n    \"@vitejs/plugin-react-swc\": \"3.6.0\",\n    \"koa-body\": \"6.0.1\",\n    \"msw\": \"1.3.0\",\n    \"react\": \"18.3.1\",\n    \"react-dom\": \"18.3.1\",\n    \"react-router-dom\": \"6.22.3\",\n    \"styled-components\": \"6.1.8\",\n    \"vite\": \"5.4.19\",\n    \"vite-plugin-dts\": \"^4.3.0\"\n  },\n  \"peerDependencies\": {\n    \"@strapi/data-transfer\": \"^5.0.0\",\n    \"react\": \"^17.0.0 || ^18.0.0\",\n    \"react-dom\": \"^17.0.0 || ^18.0.0\",\n    \"react-router-dom\": \"^6.0.0\",\n    \"styled-components\": \"^6.0.0\"\n  },\n  \"engines\": {\n    \"node\": \">=18.0.0 <=22.x.x\",\n    \"npm\": \">=6.0.0\"\n  },\n  \"nx\": {\n    \"targets\": {\n      \"build\": {\n        \"outputs\": [\n          \"{projectRoot}/build\"\n        ]\n      }\n    }\n  }\n}\n", "import { Flex, FlexProps } from '@strapi/design-system';\nimport { styled } from 'styled-components';\n\nconst MainNavWrapper = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.neutral150};\n  position: sticky;\n  max-height: 100%;\n  height: auto;\n  z-index: 4;\n\n  ${({ theme }) => theme.breakpoints.large} {\n    border-bottom: none;\n    border-right: 1px solid ${({ theme }) => theme.colors.neutral150};\n    height: 100dvh;\n  }\n`;\n\nconst MainNav = (props: FlexProps<'nav'>) => (\n  <MainNavWrapper\n    alignItems=\"normal\"\n    tag=\"nav\"\n    background=\"neutral0\"\n    direction={{\n      initial: 'row',\n      large: 'column',\n    }}\n    top={0}\n    zIndex={3}\n    width={{\n      initial: '100dvw',\n      large: 10,\n    }}\n    {...props}\n  />\n);\n\nexport { MainNav };\n", "import * as React from 'react';\n\nimport {\n  Tooltip,\n  TooltipProps as DSTooltipProps,\n  Badge,\n  BadgeProps,\n  AccessibleIcon,\n} from '@strapi/design-system';\nimport { NavLink as RouterLink, LinkProps } from 'react-router-dom';\nimport { styled } from 'styled-components';\n/* -------------------------------------------------------------------------------------------------\n * Link\n * -----------------------------------------------------------------------------------------------*/\nconst MainNavLinkWrapper = styled(RouterLink)`\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  border-radius: ${({ theme }) => theme.borderRadius};\n  background: ${({ theme }) => theme.colors.neutral0};\n  color: ${({ theme }) => theme.colors.neutral500};\n  position: relative;\n  width: 100%;\n  padding-block: 0.6rem;\n  padding-inline: 0.6rem;\n\n  &:hover {\n    svg path {\n      fill: ${({ theme }) => theme.colors.neutral600};\n    }\n    background: ${({ theme }) => theme.colors.neutral100};\n  }\n\n  &.active {\n    svg path {\n      fill: ${({ theme }) => theme.colors.primary600};\n    }\n    background: ${({ theme }) => theme.colors.primary100};\n  }\n`;\n\nconst LinkImpl = ({ children, ...props }: LinkProps) => (\n  <MainNavLinkWrapper {...props}>{children}</MainNavLinkWrapper>\n);\n/* -------------------------------------------------------------------------------------------------\n * Tooltip\n * -----------------------------------------------------------------------------------------------*/\nconst TooltipImpl = ({ children, label, position = 'right' }: NavLink.TooltipProps) => {\n  return (\n    <Tooltip side={position} label={label} delayDuration={0}>\n      <span>{children}</span>\n    </Tooltip>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Icon\n * -----------------------------------------------------------------------------------------------*/\nconst IconImpl = ({ label, children }: { label: string; children: React.ReactNode }) => {\n  if (!children) {\n    return null;\n  }\n  return <AccessibleIcon label={label}>{children}</AccessibleIcon>;\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Badge\n * -----------------------------------------------------------------------------------------------*/\nconst CustomBadge = styled(Badge)`\n  /* override default badge styles to change the border radius of the Base element in the Design System */\n  border-radius: ${({ theme }) => theme.spaces[10]};\n  height: 2rem;\n`;\n\nconst BadgeImpl = ({ children, label, ...props }: NavLink.NavBadgeProps) => {\n  if (!children) {\n    return null;\n  }\n  return (\n    <CustomBadge\n      position=\"absolute\"\n      top=\"-0.8rem\"\n      left=\"1.7rem\"\n      aria-label={label}\n      active={false}\n      {...props}\n    >\n      {children}\n    </CustomBadge>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * EXPORTS\n * -----------------------------------------------------------------------------------------------*/\n\nconst NavLink = {\n  Link: LinkImpl,\n  Tooltip: TooltipImpl,\n  Icon: IconImpl,\n  Badge: BadgeImpl,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace NavLink {\n  export interface NavBadgeProps extends BadgeProps {\n    children: React.ReactNode;\n    label: string;\n  }\n\n  export interface TooltipProps {\n    children: React.ReactNode;\n    label?: string;\n    position?: DSTooltipProps['side'];\n  }\n}\n\nexport { NavLink };\n", "import * as React from 'react';\n\nimport { Box, Flex, Typography } from '@strapi/design-system';\nimport { Lightning } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { type To } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { useIsDesktop } from '../../hooks/useMediaQuery';\nimport { MenuItem } from '../../hooks/useMenu';\nimport { tours } from '../GuidedTour/Tours';\n\nimport { NavLink } from './NavLink';\n\nconst NavLinkBadgeLock = styled(NavLink.Badge)`\n  background-color: transparent;\n`;\n\nconst NavLinkBadgeCounter = styled(NavLink.Badge)`\n  span {\n    color: ${({ theme }) => theme.colors.neutral0};\n  }\n`;\n\n/**\n * Will attach a guided tour tooltip to the right links. (mostly used for the finish step to indicate the next tour)\n * @param to: The target link\n * @param children: The original link to be wrapped in a guided tour tooltip\n * @returns The link wrapped in a guided tour tooltip or the original link if no guided tour needs to be attached\n */\nconst GuidedTourTooltip = ({ to, children }: { to: To; children: React.ReactNode }) => {\n  const normalizedTo = to.toString().replace(/\\//g, '');\n\n  switch (normalizedTo) {\n    // We attach the final step of the content type builder tour on content manager link because it's the next tour (Content Type Builder -> Content Manager).\n    case 'content-manager':\n      return <tours.contentTypeBuilder.Finish>{children}</tours.contentTypeBuilder.Finish>;\n    // We attach the final step of the api tokens tour on the home link because it was the last tour (API Tokens -> Go back to homepage).\n    case '':\n      return <tours.apiTokens.Finish>{children}</tours.apiTokens.Finish>;\n    // We attach the final step of the content manager tour on the settings link because it's the next tour (Content Manager -> API tokens).\n    case 'settings':\n      return <tours.contentManager.Finish>{children}</tours.contentManager.Finish>;\n    // If the link doesn't match any of the above, we return the original link.\n    default:\n      return children;\n  }\n};\n\nconst MainNavIcons = ({\n  listLinks,\n  mobileLinks,\n  handleClickOnLink,\n}: {\n  listLinks: MenuItem[];\n  mobileLinks: MenuItem[];\n  handleClickOnLink: (value: string) => void;\n}) => {\n  const { formatMessage } = useIntl();\n  const isDesktop = useIsDesktop();\n\n  return listLinks.length > 0\n    ? listLinks.map((link) => {\n        const LinkIcon = link.icon;\n        const badgeContentLock = link?.licenseOnly ? <Lightning fill=\"primary600\" /> : undefined;\n\n        const badgeContentNumeric =\n          link.notificationsCount && link.notificationsCount > 0\n            ? link.notificationsCount.toString()\n            : undefined;\n\n        const labelValue = formatMessage(link.intlLabel);\n        const linkMobile = mobileLinks.find((mobileLink) => mobileLink.to === link.to);\n\n        const LinkElement = () => (\n          <NavLink.Link\n            to={link.to}\n            onClick={() => handleClickOnLink(link.to)}\n            aria-label={labelValue}\n          >\n            <NavLink.Icon label={labelValue}>\n              <LinkIcon width=\"20\" height=\"20\" fill=\"neutral500\" />\n            </NavLink.Icon>\n            {badgeContentLock ? (\n              <NavLinkBadgeLock\n                label=\"locked\"\n                textColor=\"neutral500\"\n                paddingLeft={0}\n                paddingRight={0}\n              >\n                {badgeContentLock}\n              </NavLinkBadgeLock>\n            ) : badgeContentNumeric ? (\n              <NavLinkBadgeCounter\n                label={badgeContentNumeric}\n                backgroundColor=\"primary600\"\n                width=\"2.3rem\"\n                color=\"neutral0\"\n              >\n                {badgeContentNumeric}\n              </NavLinkBadgeCounter>\n            ) : null}\n          </NavLink.Link>\n        );\n\n        return isDesktop || (!isDesktop && linkMobile) ? (\n          <Flex tag=\"li\" key={link.to}>\n            <GuidedTourTooltip to={link.to}>\n              {isDesktop ? (\n                <NavLink.Tooltip label={labelValue}>\n                  <LinkElement />\n                </NavLink.Tooltip>\n              ) : (\n                <LinkElement />\n              )}\n            </GuidedTourTooltip>\n          </Flex>\n        ) : null;\n      })\n    : null;\n};\n\nconst IconContainer = styled(Box)`\n  svg {\n    display: block;\n  }\n`;\n\nconst MainNavBurgerMenuLinks = ({\n  listLinks,\n  handleClickOnLink,\n}: {\n  listLinks: MenuItem[];\n  handleClickOnLink: (value: string) => void;\n}) => {\n  const { formatMessage } = useIntl();\n\n  return listLinks.length > 0\n    ? listLinks.map((link) => {\n        const LinkIcon = link.icon;\n        const badgeContentLock = link?.licenseOnly ? <Lightning fill=\"primary600\" /> : undefined;\n\n        const badgeContentNumeric =\n          link.notificationsCount && link.notificationsCount > 0\n            ? link.notificationsCount.toString()\n            : undefined;\n\n        const labelValue = formatMessage(link.intlLabel);\n        const navigationTarget = link.navigationLink || link.to;\n\n        return (\n          <Flex paddingTop={3} alignItems=\"center\" tag=\"li\" key={navigationTarget}>\n            <NavLink.Link\n              to={navigationTarget}\n              onClick={() => handleClickOnLink(navigationTarget)}\n              aria-label={labelValue}\n            >\n              <IconContainer marginRight=\"0.6rem\">\n                <LinkIcon width=\"20\" height=\"20\" fill=\"neutral500\" />\n              </IconContainer>\n              <Typography marginLeft={3}>{labelValue}</Typography>\n              {badgeContentLock ? (\n                <NavLinkBadgeLock\n                  label=\"locked\"\n                  textColor=\"neutral500\"\n                  paddingLeft={0}\n                  paddingRight={0}\n                >\n                  {badgeContentLock}\n                </NavLinkBadgeLock>\n              ) : badgeContentNumeric ? (\n                <NavLinkBadgeCounter\n                  label={badgeContentNumeric}\n                  backgroundColor=\"primary600\"\n                  width=\"2.3rem\"\n                  color=\"neutral0\"\n                >\n                  {badgeContentNumeric}\n                </NavLinkBadgeCounter>\n              ) : null}\n            </NavLink.Link>\n          </Flex>\n        );\n      })\n    : null;\n};\n\nexport { MainNavIcons, MainNavBurgerMenuLinks };\n", "import { Box, Flex, type FlexComponent, VisuallyHidden } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\nimport { useConfiguration } from '../../features/Configuration';\n\nconst BrandIconWrapper = styled<FlexComponent>(Flex)`\n  svg,\n  img {\n    border-radius: ${({ theme }) => theme.borderRadius};\n    object-fit: contain;\n    height: 2.4rem;\n    width: 2.4rem;\n  }\n`;\n\nexport const NavBrand = () => {\n  const { formatMessage } = useIntl();\n  const {\n    logos: { menu },\n  } = useConfiguration('LeftMenu');\n  return (\n    <Box padding={3}>\n      <BrandIconWrapper direction=\"column\" justifyContent=\"center\" width=\"3.2rem\" height=\"3.2rem\">\n        <img\n          src={menu.custom?.url || menu.default}\n          alt={formatMessage({\n            id: 'app.components.LeftMenu.logo.alt',\n            defaultMessage: 'Application logo',\n          })}\n          width=\"100%\"\n          height=\"100%\"\n        />\n        <VisuallyHidden>\n          <span>\n            {formatMessage({\n              id: 'app.components.LeftMenu.navbrand.title',\n              defaultMessage: 'Strapi Dashboard',\n            })}\n          </span>\n          <span>\n            {formatMessage({\n              id: 'app.components.LeftMenu.navbrand.workplace',\n              defaultMessage: 'Workplace',\n            })}\n          </span>\n        </VisuallyHidden>\n      </BrandIconWrapper>\n    </Box>\n  );\n};\n", "import { Flex, Menu, VisuallyHidden, Avatar, Typography, Badge } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\nimport { useNavigate } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { useAuth } from '../../features/Auth';\nimport { getInitials, getDisplayName } from '../../utils/users';\n\nconst MenuTrigger = styled(Menu.Trigger)`\n  padding: 0;\n\n  ${({ theme }) => theme.breakpoints.large} {\n    width: 4rem;\n    height: 4rem;\n    justify-content: center;\n  }\n`;\n\nconst MenuIcon = styled(Flex)`\n  height: ${({ theme }) => theme.spaces[7]};\n  width: ${({ theme }) => theme.spaces[7]};\n  border: none;\n  border-radius: 50%;\n  padding: 0;\n  overflow: hidden;\n`;\n\nconst MenuContent = styled(Menu.Content)`\n  max-height: fit-content;\n  width: 200px;\n`;\n\nconst UserInfo = styled(Flex)`\n  && {\n    padding: ${({ theme }) => theme.spaces[3]};\n  }\n  align-items: flex-start;\n`;\n\nconst BadgeWrapper = styled(Flex)`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${({ theme }) => theme.spaces[1]};\n\n  width: 100%;\n`;\nconst StyledTypography = styled(Typography)`\n  word-break: break-word;\n  margin-bottom: ${({ theme }) => theme.spaces[3]};\n`;\n\nexport interface NavUserProps {\n  initials?: string;\n  children?: React.ReactNode;\n  showDisplayName?: boolean;\n}\n\nexport const NavUser = ({\n  initials,\n  showDisplayName = false,\n  children,\n  ...props\n}: NavUserProps) => {\n  const { formatMessage } = useIntl();\n  const navigate = useNavigate();\n  const user = useAuth('User', (state) => state.user);\n  const logout = useAuth('Logout', (state) => state.logout);\n  const userDisplayName = getDisplayName(user);\n\n  const handleProfile = () => {\n    const redirection = '/me';\n    navigate(redirection);\n  };\n\n  const handleLogout = () => {\n    const redirection = '/auth/login';\n    logout();\n    navigate(redirection);\n  };\n\n  return (\n    <Flex {...props}>\n      <Menu.Root>\n        <MenuTrigger endIcon={null} fullWidth justifyContent=\"flex-start\">\n          <Flex alignItems=\"center\" gap={3}>\n            <MenuIcon justifyContent=\"center\">\n              <Avatar.Item delayMs={0} fallback={initials || getInitials(user)} />\n            </MenuIcon>\n            {showDisplayName ? (\n              <Typography variant=\"omega\">{children || userDisplayName}</Typography>\n            ) : (\n              <VisuallyHidden tag=\"span\">{children || userDisplayName}</VisuallyHidden>\n            )}\n          </Flex>\n        </MenuTrigger>\n\n        <MenuContent popoverPlacement=\"top-start\" zIndex={3}>\n          <UserInfo direction=\"column\" gap={0} alignItems=\"flex-start\">\n            <Typography variant=\"omega\" fontWeight=\"bold\" textTransform=\"none\">\n              {children || userDisplayName}\n            </Typography>\n            <StyledTypography variant=\"pi\" textColor=\"neutral600\">\n              {user?.email}\n            </StyledTypography>\n            <BadgeWrapper>\n              {user?.roles?.map((role) => <Badge key={role.id}>{role.name}</Badge>)}\n            </BadgeWrapper>\n          </UserInfo>\n\n          <Menu.Separator />\n\n          <Menu.Item onSelect={handleProfile}>\n            {formatMessage({\n              id: 'global.profile.settings',\n              defaultMessage: 'Profile settings',\n            })}\n          </Menu.Item>\n\n          <Menu.Item variant=\"danger\" onSelect={handleLogout} color=\"danger600\">\n            {formatMessage({\n              id: 'app.components.LeftMenu.logout',\n              defaultMessage: 'Log out',\n            })}\n          </Menu.Item>\n        </MenuContent>\n      </Menu.Root>\n    </Flex>\n  );\n};\n", "import * as React from 'react';\n\nimport { Box, ScrollArea } from '@strapi/design-system';\nimport { styled } from 'styled-components';\n\nimport { HEIGHT_TOP_NAVIGATION } from '../../constants/theme';\nimport { MenuItem } from '../../core/apis/router';\n\nimport { MainNavBurgerMenuLinks } from './MainNavLinks';\nimport { NavUser } from './NavUser';\n\ninterface NavBurgerMenuProps {\n  isShown: boolean;\n  listLinks: MenuItem[];\n  handleClickOnLink: (value: string) => void;\n  mobile?: boolean;\n}\n\nconst NavBurgerMenuWrapper = styled(Box)<{ $isShown: boolean }>`\n  position: fixed;\n  top: calc(${HEIGHT_TOP_NAVIGATION} + 1px);\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 3;\n  background-color: ${({ theme }) => theme.colors.neutral0};\n  transform: ${({ $isShown }) => ($isShown ? 'translateY(0)' : 'translateY(-100%)')};\n  transition: transform 0.2s ease-in-out;\n\n  ${({ theme }) => theme.breakpoints.large} {\n    display: none;\n  }\n`;\n\nconst NavBurgerMenu = ({ isShown, handleClickOnLink, listLinks }: NavBurgerMenuProps) => (\n  <NavBurgerMenuWrapper $isShown={isShown}>\n    <ScrollArea>\n      <Box\n        tag=\"ul\"\n        paddingLeft={{\n          initial: 4,\n          medium: 6,\n        }}\n        paddingRight={{\n          initial: 4,\n          medium: 6,\n        }}\n        paddingTop={{\n          initial: 1,\n          medium: 3,\n        }}\n        paddingBottom={{\n          initial: 4,\n          medium: 6,\n        }}\n      >\n        <MainNavBurgerMenuLinks listLinks={listLinks} handleClickOnLink={handleClickOnLink} />\n        <Box paddingTop={4} tag=\"li\">\n          <NavUser showDisplayName />\n        </Box>\n      </Box>\n    </ScrollArea>\n  </NavBurgerMenuWrapper>\n);\n\nexport { NavBurgerMenu };\n", "import { useLicenseLimits } from '@strapi/admin/strapi-admin/ee';\nimport { Flex, Tooltip } from '@strapi/design-system';\nimport { format, isBefore, startOfToday } from 'date-fns';\nimport { useIntl } from 'react-intl';\nimport { styled, useTheme } from 'styled-components';\n\nimport { useGetLicenseTrialTimeLeftQuery } from '../../../src/services/admin';\n\ntype CircleProgressBarProps = {\n  percentage: number;\n};\n\nconst CircleProgressBar = ({ percentage }: CircleProgressBarProps) => {\n  const theme = useTheme();\n\n  const radius = 45;\n  const circumference = 2 * Math.PI * radius;\n  const offset = circumference * (1 - percentage / 100);\n\n  return (\n    <svg width=\"32\" height=\"32\" viewBox=\"0 0 100 100\">\n      <defs>\n        <linearGradient id=\"progressGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n          <stop offset=\"0%\" stopColor={theme.colors.primary600} />\n          <stop offset=\"100%\" stopColor={theme.colors.alternative600} />\n        </linearGradient>\n      </defs>\n      <circle cx=\"50\" cy=\"50\" r={radius} stroke=\"#ccc\" strokeWidth=\"10\" fill=\"none\" />\n      <circle\n        cx=\"50\"\n        cy=\"50\"\n        r={radius}\n        stroke=\"url(#progressGradient)\"\n        strokeWidth=\"10\"\n        fill=\"none\"\n        strokeDasharray={circumference}\n        strokeDashoffset={offset}\n        transform=\"rotate(-90 50 50)\"\n        strokeLinecap=\"round\"\n      />\n      <svg x=\"35\" y=\"25\" width=\"50\" height=\"50\" viewBox=\"0 0 32 32\">\n        <path\n          fill=\"url(#progressGradient)\"\n          d=\"m21.731 14.683-14 15a1 1 0 0 1-1.711-.875l1.832-9.167L.65 16.936a1 1 0 0 1-.375-1.625l14-15a1 1 0 0 1 1.71.875l-1.837 9.177 7.204 2.7a1 1 0 0 1 .375 1.62z\"\n        />\n      </svg>\n    </svg>\n  );\n};\n\nconst Container = styled(Flex)`\n  display: none;\n\n  ${({ theme }) => theme.breakpoints.large} {\n    display: flex;\n  }\n`;\n\nconst TrialCountdown = () => {\n  const { formatMessage } = useIntl();\n  const { license, isError, isLoading } = useLicenseLimits();\n\n  const timeLeftData = useGetLicenseTrialTimeLeftQuery(undefined, {\n    skip: !license?.isTrial,\n  });\n\n  if (\n    isError ||\n    isLoading ||\n    !license?.isTrial ||\n    timeLeftData.isLoading ||\n    timeLeftData.isError ||\n    !timeLeftData.data ||\n    !timeLeftData.data.trialEndsAt\n  ) {\n    return null;\n  }\n\n  const targetDate = new Date(timeLeftData.data.trialEndsAt);\n  const now = new Date();\n  const isTargetDateInPast = isBefore(targetDate, startOfToday());\n\n  const millisecondsPerDay = 1000 * 60 * 60 * 24;\n  const timeDifference = targetDate.getTime() - now.getTime();\n\n  const daysLeft =\n    Math.ceil(timeDifference / millisecondsPerDay) <= 0\n      ? 0\n      : Math.ceil(timeDifference / millisecondsPerDay);\n\n  return (\n    <Container justifyContent=\"center\" padding={3}>\n      <Tooltip\n        label={formatMessage(\n          isTargetDateInPast\n            ? {\n                id: 'app.components.LeftMenu.trialCountdown.endedAt',\n                defaultMessage: 'Your trial ended on {date}',\n              }\n            : {\n                id: 'app.components.LeftMenu.trialCountdown.endsAt',\n                defaultMessage: 'Your trial ends on {date}',\n              },\n          {\n            date: format(new Date(timeLeftData.data.trialEndsAt), 'PPP'),\n          }\n        )}\n        side=\"right\"\n      >\n        <div data-testid=\"trial-countdown\">\n          <CircleProgressBar percentage={((30 - daysLeft) * 100) / 30} />\n        </div>\n      </Tooltip>\n    </Container>\n  );\n};\n\nexport { TrialCountdown };\n", "import * as React from 'react';\n\nimport { Box, Divider, Flex, FlexComponent, useCollator } from '@strapi/design-system';\nimport { Cross, List } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { useLocation } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { useTracking } from '../features/Tracking';\nimport { Menu, MenuItem, MobileMenuItem } from '../hooks/useMenu';\n\nimport { MainNav } from './MainNav/MainNav';\nimport { MainNavIcons } from './MainNav/MainNavLinks';\nimport { NavBrand } from './MainNav/NavBrand';\nimport { NavBurgerMenu } from './MainNav/NavBurgerMenu';\nimport { NavUser } from './MainNav/NavUser';\nimport { TrialCountdown } from './MainNav/TrialCountdown';\n\nconst sortLinks = (links: MenuItem[]) => {\n  return links.sort((a, b) => {\n    // if no position is defined, we put the link in the position of the external plugins, before the plugins list\n    const positionA = a.position ?? 6;\n    const positionB = b.position ?? 6;\n\n    if (positionA < positionB) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n};\n\nconst NavListWrapper = styled<FlexComponent<'ul'>>(Flex)`\n  width: 100%;\n  overflow-y: auto;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\ninterface LeftMenuProps\n  extends Pick<\n    Menu,\n    'generalSectionLinks' | 'pluginsSectionLinks' | 'topMobileNavigation' | 'burgerMobileNavigation'\n  > {}\n\nconst MenuDetails = styled(Flex)`\n  flex: 1;\n  flex-direction: row;\n  justify-content: space-between;\n  overflow-x: auto;\n\n  ${({ theme }) => theme.breakpoints.large} {\n    flex-direction: column;\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n`;\n\nconst LeftMenu = ({\n  generalSectionLinks,\n  pluginsSectionLinks,\n  topMobileNavigation,\n  burgerMobileNavigation,\n}: LeftMenuProps) => {\n  const [isBurgerMenuShown, setIsBurgerMenuShown] = React.useState(false);\n  const { trackUsage } = useTracking();\n  const { pathname } = useLocation();\n  const { formatMessage, locale } = useIntl();\n  const formatter = useCollator(locale, {\n    sensitivity: 'base',\n  });\n\n  const handleClickOnLink = (destination: string) => {\n    trackUsage('willNavigate', { from: pathname, to: destination });\n  };\n\n  // Close burger menu when route changes\n  React.useEffect(() => {\n    setIsBurgerMenuShown(false);\n  }, [pathname]);\n\n  const listLinksAlphabeticallySorted = [...pluginsSectionLinks, ...generalSectionLinks].sort(\n    (a, b) => formatter.compare(formatMessage(a.intlLabel), formatMessage(b.intlLabel))\n  );\n  const listLinks = sortLinks(listLinksAlphabeticallySorted);\n\n  /**\n   * Return filtered mobile navigation links (used for both top and burger menu)\n   */\n  const mapMobileNavigationLinks = (mobileNavLinks: MobileMenuItem[]): MenuItem[] =>\n    mobileNavLinks.reduce<MenuItem[]>((acc, mobileLink) => {\n      const linkFound = listLinks.find((link) => link.to === mobileLink.to);\n      if (linkFound) {\n        acc.push(mobileLink.link ? { ...linkFound, navigationLink: mobileLink.link } : linkFound);\n      }\n      return acc;\n    }, []);\n\n  /**\n   * Mobile top navigation\n   */\n  const topMobileNavigationLinks = mapMobileNavigationLinks(topMobileNavigation);\n\n  /**\n   * Mobile burger menu\n   */\n  const excludedPluginsFromBurgerMenu = [\n    'content-manager',\n    'content-type-builder',\n    'upload',\n    'content-releases',\n  ];\n  const burgerMenuPluginsLinks = pluginsSectionLinks.filter(\n    (plugin) => !excludedPluginsFromBurgerMenu.some((link) => plugin.to.includes(link))\n  );\n  const burgerMobileNavigationLinks = [\n    ...burgerMenuPluginsLinks,\n    ...mapMobileNavigationLinks(burgerMobileNavigation),\n  ];\n\n  return (\n    <>\n      <MainNav>\n        <NavBrand />\n\n        <Divider />\n\n        <MenuDetails>\n          <NavListWrapper\n            tag=\"ul\"\n            gap={3}\n            direction={{\n              initial: 'row',\n              large: 'column',\n            }}\n            alignItems=\"center\"\n            justifyContent={{\n              initial: 'center',\n              large: 'flex-start',\n            }}\n            flex={1}\n            paddingLeft={{\n              initial: 3,\n              large: 0,\n            }}\n            paddingRight={{\n              initial: 3,\n              large: 0,\n            }}\n            paddingTop={3}\n            paddingBottom={3}\n          >\n            <MainNavIcons\n              listLinks={listLinks}\n              mobileLinks={topMobileNavigationLinks}\n              handleClickOnLink={handleClickOnLink}\n            />\n          </NavListWrapper>\n          <TrialCountdown />\n          <Box\n            display={{\n              initial: 'none',\n              large: 'flex',\n            }}\n            borderStyle=\"solid\"\n            borderWidth={{\n              initial: 0,\n              large: '1px 0 0 0',\n            }}\n            borderColor=\"neutral150\"\n            padding={3}\n          >\n            <NavUser />\n          </Box>\n        </MenuDetails>\n\n        <Box\n          padding={3}\n          display={{\n            initial: 'flex',\n            large: 'none',\n          }}\n        >\n          <Flex\n            height=\"3.2rem\"\n            width=\"3.2rem\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            onClick={() => setIsBurgerMenuShown(!isBurgerMenuShown)}\n          >\n            {!isBurgerMenuShown ? <List /> : <Cross />}\n          </Flex>\n        </Box>\n      </MainNav>\n      <NavBurgerMenu\n        isShown={isBurgerMenuShown}\n        listLinks={burgerMobileNavigationLinks}\n        handleClickOnLink={handleClickOnLink}\n      />\n    </>\n  );\n};\n\nexport { LeftMenu };\n", "import * as React from 'react';\n\nimport { produce } from 'immer';\n\nimport { Page } from '../components/PageHelpers';\nimport { StrapiAppContextValue, useStrapiApp } from '../features/StrapiApp';\n\n/**\n * TODO: this isn't great, and we really should focus on fixing this.\n */\nconst PluginsInitializer = ({ children }: { children: React.ReactNode }) => {\n  const appPlugins = useStrapiApp('PluginsInitializer', (state) => state.plugins);\n  const [{ plugins }, dispatch] = React.useReducer<React.Reducer<State, Action>, State>(\n    reducer,\n    initialState,\n    () => init(appPlugins)\n  );\n  const setPlugin = React.useRef((pluginId: string) => {\n    dispatch({ type: 'SET_PLUGIN_READY', pluginId });\n  });\n\n  const hasApluginNotReady = Object.keys(plugins).some(\n    (plugin) => plugins[plugin].isReady === false\n  );\n\n  /**\n   *\n   * I have spent some time trying to understand what is happening here, and wanted to\n   * leave that knowledge for my future me:\n   *\n   * `initializer` is an undocumented property of the `registerPlugin` API. At the time\n   * of writing it seems only to be used by the i18n plugin.\n   *\n   * How does it work?\n   *\n   * Every plugin that has an `initializer` component defined, receives the\n   * `setPlugin` function as a component prop. In the case of i18n the plugin fetches locales\n   * first and calls `setPlugin` with `pluginId` once they are loaded, which then triggers the\n   * reducer of the admin app defined above.\n   *\n   * Once all plugins are set to `isReady: true` the app renders.\n   *\n   * This API is used to block rendering of the admin app. We should remove that in v5 completely\n   * and make sure plugins can inject data into the global store before they are initialized, to avoid\n   * having a new prop-callback based communication channel between plugins and the core admin app.\n   *\n   */\n\n  if (hasApluginNotReady) {\n    const initializers = Object.keys(plugins).reduce((acc, current) => {\n      const InitializerComponent = plugins[current].initializer;\n\n      if (InitializerComponent) {\n        const key = plugins[current].pluginId;\n\n        acc.push(<InitializerComponent key={key} setPlugin={setPlugin.current} />);\n      }\n\n      return acc;\n    }, [] as React.ReactNode[]);\n\n    return (\n      <>\n        {initializers}\n        <Page.Loading />\n      </>\n    );\n  }\n\n  return children;\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Reducer\n * -----------------------------------------------------------------------------------------------*/\n\ninterface State {\n  plugins: StrapiAppContextValue['plugins'];\n}\n\nconst initialState: State = {\n  plugins: {},\n};\n\ntype SetPluginReadyAction = {\n  type: 'SET_PLUGIN_READY';\n  pluginId: string;\n};\n\ntype Action = SetPluginReadyAction;\n\nconst reducer: React.Reducer<State, Action> = (state = initialState, action: Action): State =>\n  produce(state, (draftState) => {\n    switch (action.type) {\n      case 'SET_PLUGIN_READY': {\n        draftState.plugins[action.pluginId].isReady = true;\n        break;\n      }\n      default:\n        return draftState;\n    }\n  });\n\n/* -------------------------------------------------------------------------------------------------\n * Init state\n * -----------------------------------------------------------------------------------------------*/\n\nconst init = (plugins: State['plugins']): State => {\n  return {\n    plugins,\n  };\n};\n\nexport { PluginsInitializer };\n", "import { useEffect } from 'react';\n\nimport { useLicenseLimits } from '@strapi/admin/strapi-admin/ee';\nimport { Box, Flex, LinkButton, Typography } from '@strapi/design-system';\nimport { isAfter, subDays } from 'date-fns';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\nimport { useGetLicenseTrialTimeLeftQuery } from '../../src/services/admin';\nimport { RESPONSIVE_DEFAULT_SPACING } from '../constants/theme';\nimport { useScopedPersistentState } from '../hooks/usePersistentState';\n\nconst BannerBackground = styled(Flex)`\n  background: linear-gradient(\n    90deg,\n    ${({ theme }) => theme.colors.primary600} 0%,\n    ${({ theme }) => theme.colors.alternative600} 121.48%\n  );\n`;\n\nconst Banner = ({ isTrialEndedRecently }: { isTrialEndedRecently: boolean }) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <BannerBackground width=\"100%\" justifyContent=\"center\">\n      <Flex\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        width=\"100%\"\n        paddingTop={2}\n        paddingBottom={2}\n        paddingLeft={RESPONSIVE_DEFAULT_SPACING}\n        paddingRight={RESPONSIVE_DEFAULT_SPACING}\n        gap={2}\n      >\n        <Box>\n          <Typography\n            variant=\"delta\"\n            fontWeight=\"bold\"\n            textColor=\"neutral0\"\n            textAlign=\"center\"\n            fontSize={2}\n          >\n            {formatMessage(\n              isTrialEndedRecently\n                ? {\n                    id: 'app.components.UpsellBanner.intro.ended',\n                    defaultMessage: 'Your trial has ended: ',\n                  }\n                : {\n                    id: 'app.components.UpsellBanner.intro',\n                    defaultMessage: 'Access to Growth plan features: ',\n                  }\n            )}\n          </Typography>\n          <Typography\n            variant=\"delta\"\n            textColor=\"neutral0\"\n            textAlign=\"center\"\n            paddingRight={4}\n            fontSize={2}\n          >\n            {formatMessage(\n              isTrialEndedRecently\n                ? {\n                    id: 'app.components.UpsellBanner.text.ended',\n                    defaultMessage: 'Keep access to Growth features by upgrading now.',\n                  }\n                : {\n                    id: 'app.components.UpsellBanner.text',\n                    defaultMessage:\n                      'As part of your trial, you can explore premium tools such as Content History, Releases, and Single Sign-On (SSO).',\n                  }\n            )}\n          </Typography>\n        </Box>\n        <Box>\n          <LinkButton\n            width=\"max-content\"\n            variant=\"tertiary\"\n            href=\"https://strapi.chargebeeportal.com\"\n            target=\"_blank\"\n          >\n            {formatMessage(\n              isTrialEndedRecently\n                ? {\n                    id: 'app.components.UpsellBanner.button.ended',\n                    defaultMessage: 'Keep Growth plan',\n                  }\n                : {\n                    id: 'app.components.UpsellBanner.button',\n                    defaultMessage: 'Upgrade now',\n                  }\n            )}\n          </LinkButton>\n        </Box>\n      </Flex>\n    </BannerBackground>\n  );\n};\n\nconst UpsellBanner = () => {\n  const { license } = useLicenseLimits();\n\n  const [cachedTrialEndsAt, setCachedTrialEndsAt] = useScopedPersistentState<string | undefined>(\n    'STRAPI_FREE_TRIAL_ENDS_AT',\n    undefined\n  );\n\n  const sevenDaysAgo = subDays(new Date(), 7);\n\n  const timeLeftData = useGetLicenseTrialTimeLeftQuery(undefined, {\n    skip: !license?.isTrial,\n  });\n\n  useEffect(() => {\n    if (timeLeftData.data?.trialEndsAt) {\n      setCachedTrialEndsAt(timeLeftData.data.trialEndsAt);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timeLeftData.data?.trialEndsAt]);\n\n  // When the license is not a trial + not EE, and the cached trial end date is found in the localstorage, that means the trial has ended\n  // We show the banner to encourage the user to upgrade (for 7 days after the trial ends)\n  const isTrialEndedRecently = Boolean(\n    !license?.isTrial &&\n      !window.strapi.isEE &&\n      cachedTrialEndsAt &&\n      isAfter(new Date(cachedTrialEndsAt), sevenDaysAgo)\n  );\n\n  if (timeLeftData.data?.trialEndsAt || isTrialEndedRecently) {\n    return <Banner isTrialEndedRecently={isTrialEndedRecently} />;\n  }\n\n  return null;\n};\n\nexport { UpsellBanner };\n", "import * as React from 'react';\n\nimport { Cog, ShoppingCart, House } from '@strapi/icons';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { useTypedSelector } from '../core/store/hooks';\nimport { useAuth, AuthContextValue } from '../features/Auth';\nimport { StrapiAppContextValue, useStrapiApp } from '../features/StrapiApp';\n\n/* -------------------------------------------------------------------------------------------------\n * useMenu\n * -----------------------------------------------------------------------------------------------*/\n\nexport type MenuItem = Omit<StrapiAppContextValue['menu'][number], 'Component'> & {\n  navigationLink?: string;\n};\nexport type MobileMenuItem = {\n  to: string;\n  link?: string;\n};\n\nexport interface Menu {\n  generalSectionLinks: MenuItem[];\n  pluginsSectionLinks: MenuItem[];\n  topMobileNavigation: MobileMenuItem[];\n  burgerMobileNavigation: MobileMenuItem[];\n  isLoading: boolean;\n}\n\nconst useMenu = (shouldUpdateStrapi: boolean) => {\n  const checkUserHasPermissions = useAuth('useMenu', (state) => state.checkUserHasPermissions);\n  const menu = useStrapiApp('useMenu', (state) => state.menu);\n  const permissions = useTypedSelector((state) => state.admin_app.permissions);\n  const [menuWithUserPermissions, setMenuWithUserPermissions] = React.useState<Menu>({\n    generalSectionLinks: [\n      {\n        icon: House,\n        intlLabel: {\n          id: 'global.home',\n          defaultMessage: 'Home',\n        },\n        to: '/',\n        permissions: [],\n        position: 0,\n      },\n      {\n        icon: ShoppingCart,\n        intlLabel: {\n          id: 'global.marketplace',\n          defaultMessage: 'Marketplace',\n        },\n        to: '/marketplace',\n        permissions: permissions.marketplace?.main ?? [],\n        position: 7,\n      },\n      {\n        icon: Cog,\n        intlLabel: {\n          id: 'global.settings',\n          defaultMessage: 'Settings',\n        },\n        to: '/settings',\n        // Permissions of this link are retrieved in the init phase\n        // using the settings menu\n        permissions: [],\n        notificationsCount: 0,\n        position: 9,\n      },\n    ],\n    pluginsSectionLinks: [],\n    topMobileNavigation: [\n      {\n        to: '/',\n      },\n      {\n        to: 'content-manager',\n      },\n      {\n        to: 'plugins/content-releases',\n      },\n      {\n        to: 'plugins/upload',\n      },\n    ],\n    burgerMobileNavigation: [\n      {\n        to: '/settings',\n      },\n    ],\n    isLoading: true,\n  });\n  const generalSectionLinksRef = React.useRef(menuWithUserPermissions.generalSectionLinks);\n\n  React.useEffect(() => {\n    async function applyMenuPermissions() {\n      const authorizedPluginSectionLinks = await getPluginSectionLinks(\n        menu,\n        checkUserHasPermissions\n      );\n\n      const authorizedGeneralSectionLinks = await getGeneralLinks(\n        generalSectionLinksRef.current,\n        shouldUpdateStrapi,\n        checkUserHasPermissions\n      );\n\n      setMenuWithUserPermissions((state) => ({\n        ...state,\n        generalSectionLinks: authorizedGeneralSectionLinks,\n        pluginsSectionLinks: authorizedPluginSectionLinks,\n        isLoading: false,\n      }));\n    }\n\n    applyMenuPermissions();\n  }, [\n    setMenuWithUserPermissions,\n    generalSectionLinksRef,\n    menu,\n    permissions,\n    shouldUpdateStrapi,\n    checkUserHasPermissions,\n  ]);\n\n  return menuWithUserPermissions;\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\nconst getGeneralLinks = async (\n  generalSectionRawLinks: MenuItem[],\n  shouldUpdateStrapi: boolean = false,\n  checkUserHasPermissions: AuthContextValue['checkUserHasPermissions']\n) => {\n  const generalSectionLinksPermissions = await Promise.all(\n    generalSectionRawLinks.map(({ permissions }) => checkUserHasPermissions(permissions))\n  );\n\n  const authorizedGeneralSectionLinks = generalSectionRawLinks.filter(\n    (_, index) => generalSectionLinksPermissions[index].length > 0\n  );\n\n  const settingsLinkIndex = authorizedGeneralSectionLinks.findIndex(\n    (obj) => obj.to === '/settings'\n  );\n\n  if (settingsLinkIndex === -1) {\n    return [];\n  }\n\n  const authorizedGeneralLinksClone = cloneDeep(authorizedGeneralSectionLinks);\n\n  authorizedGeneralLinksClone[settingsLinkIndex].notificationsCount = shouldUpdateStrapi ? 1 : 0;\n\n  return authorizedGeneralLinksClone;\n};\n\nconst getPluginSectionLinks = async (\n  pluginsSectionRawLinks: MenuItem[],\n  checkUserHasPermissions: AuthContextValue['checkUserHasPermissions']\n) => {\n  const pluginSectionLinksPermissions = await Promise.all(\n    pluginsSectionRawLinks.map(({ permissions }) => checkUserHasPermissions(permissions))\n  );\n\n  const authorizedPluginSectionLinks = pluginsSectionRawLinks.filter(\n    (_, index) => pluginSectionLinksPermissions[index].length > 0\n  );\n\n  return authorizedPluginSectionLinks;\n};\n\nexport { useMenu };\n", "import * as React from 'react';\n\nimport packageInfo from '@strapi/admin/package.json';\nimport { Box, Flex, SkipToContent } from '@strapi/design-system';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { useIntl } from 'react-intl';\nimport { Outlet } from 'react-router-dom';\nimport lt from 'semver/functions/lt';\nimport valid from 'semver/functions/valid';\n\nimport { LeftMenu } from '../components/LeftMenu';\nimport { NpsSurvey } from '../components/NpsSurvey';\nimport { Page } from '../components/PageHelpers';\nimport { PluginsInitializer } from '../components/PluginsInitializer';\nimport { PrivateRoute } from '../components/PrivateRoute';\nimport { UpsellBanner } from '../components/UpsellBanner';\nimport { HEIGHT_TOP_NAVIGATION } from '../constants/theme';\nimport { AppInfoProvider } from '../features/AppInfo';\nimport { useAuth } from '../features/Auth';\nimport { useConfiguration } from '../features/Configuration';\nimport { useStrapiApp } from '../features/StrapiApp';\nimport { useTracking } from '../features/Tracking';\nimport { useMenu } from '../hooks/useMenu';\nimport { useInformationQuery } from '../services/admin';\nimport { hashAdminUserEmail } from '../utils/users';\n\nconst { version: strapiVersion } = packageInfo;\n\nconst AdminLayout = () => {\n  const { formatMessage } = useIntl();\n  const userInfo = useAuth('AuthenticatedApp', (state) => state.user);\n  const [userId, setUserId] = React.useState<string>();\n  const { showReleaseNotification } = useConfiguration('AuthenticatedApp');\n\n  const { data: appInfo, isLoading: isLoadingAppInfo } = useInformationQuery();\n  const [tagName, setTagName] = React.useState<string>(strapiVersion);\n\n  React.useEffect(() => {\n    if (showReleaseNotification) {\n      fetch('https://api.github.com/repos/strapi/strapi/releases/latest')\n        .then(async (res) => {\n          if (!res.ok) {\n            return;\n          }\n\n          const response = (await res.json()) as { tag_name: string | null | undefined };\n\n          if (!response.tag_name) {\n            throw new Error();\n          }\n\n          setTagName(response.tag_name);\n        })\n        .catch(() => {\n          /**\n           * silence is golden & we'll use the strapiVersion as a fallback\n           */\n        });\n    }\n  }, [showReleaseNotification]);\n\n  React.useEffect(() => {\n    hashAdminUserEmail(userInfo).then((id) => {\n      if (id) {\n        setUserId(id);\n      }\n    });\n  }, [userInfo]);\n\n  const { trackUsage } = useTracking();\n\n  const {\n    isLoading: isLoadingMenu,\n    generalSectionLinks,\n    pluginsSectionLinks,\n    topMobileNavigation,\n    burgerMobileNavigation,\n  } = useMenu(checkLatestStrapiVersion(strapiVersion, tagName));\n\n  const getAllWidgets = useStrapiApp('TrackingProvider', (state) => state.widgets.getAll);\n  const projectId = appInfo?.projectId;\n  React.useEffect(() => {\n    if (projectId) {\n      trackUsage('didAccessAuthenticatedAdministration', {\n        registeredWidgets: getAllWidgets().map((widget) => widget.uid),\n        projectId,\n      });\n    }\n  }, [projectId, getAllWidgets, trackUsage]);\n\n  // We don't need to wait for the release query to be fetched before rendering the plugins\n  // however, we need the appInfos and the permissions\n  if (isLoadingMenu || isLoadingAppInfo) {\n    return <Page.Loading />;\n  }\n\n  return (\n    <AppInfoProvider\n      {...appInfo}\n      userId={userId}\n      latestStrapiReleaseTag={tagName}\n      shouldUpdateStrapi={checkLatestStrapiVersion(strapiVersion, tagName)}\n    >\n      <NpsSurvey />\n      <PluginsInitializer>\n        <DndProvider backend={HTML5Backend}>\n          <Box background=\"neutral100\">\n            <SkipToContent>\n              {formatMessage({ id: 'skipToContent', defaultMessage: 'Skip to content' })}\n            </SkipToContent>\n            <Flex\n              height=\"100dvh\"\n              direction={{\n                initial: 'column',\n                large: 'row',\n              }}\n              alignItems=\"flex-start\"\n            >\n              <LeftMenu\n                generalSectionLinks={generalSectionLinks}\n                pluginsSectionLinks={pluginsSectionLinks}\n                topMobileNavigation={topMobileNavigation}\n                burgerMobileNavigation={burgerMobileNavigation}\n              />\n              <Box\n                flex={1}\n                overflow=\"auto\"\n                width=\"100%\"\n                height={{\n                  initial: 'auto',\n                  large: '100%',\n                }}\n              >\n                <UpsellBanner />\n                <Outlet />\n              </Box>\n            </Flex>\n          </Box>\n        </DndProvider>\n      </PluginsInitializer>\n    </AppInfoProvider>\n  );\n};\n\nconst PrivateAdminLayout = () => {\n  return (\n    <PrivateRoute>\n      <AdminLayout />\n    </PrivateRoute>\n  );\n};\n\nconst checkLatestStrapiVersion = (\n  currentPackageVersion: string,\n  latestPublishedVersion: string = ''\n): boolean => {\n  if (!valid(currentPackageVersion) || !valid(latestPublishedVersion)) {\n    return false;\n  }\n\n  return lt(currentPackageVersion, latestPublishedVersion);\n};\n\nexport { AdminLayout, PrivateAdminLayout };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,EACE,MAAQ;AAAA,EACR,SAAW;AAAA,EACX,aAAe;AAAA,EACf,YAAc;AAAA,IACZ,MAAQ;AAAA,IACR,KAAO;AAAA,EACT;AAAA,EACA,SAAW;AAAA,EACX,QAAU;AAAA,IACR,MAAQ;AAAA,IACR,OAAS;AAAA,IACT,KAAO;AAAA,EACT;AAAA,EACA,aAAe;AAAA,IACb;AAAA,MACE,MAAQ;AAAA,MACR,OAAS;AAAA,MACT,KAAO;AAAA,IACT;AAAA,EACF;AAAA,EACA,SAAW;AAAA,IACT,kBAAkB;AAAA,MAChB,OAAS;AAAA,MACT,QAAU;AAAA,MACV,QAAU;AAAA,MACV,SAAW;AAAA,MACX,SAAW;AAAA,IACb;AAAA,IACA,qBAAqB;AAAA,MACnB,OAAS;AAAA,MACT,QAAU;AAAA,MACV,QAAU;AAAA,MACV,SAAW;AAAA,MACX,SAAW;AAAA,IACb;AAAA,IACA,uBAAuB;AAAA,MACrB,OAAS;AAAA,MACT,QAAU;AAAA,MACV,QAAU;AAAA,MACV,SAAW;AAAA,MACX,SAAW;AAAA,IACb;AAAA,IACA,eAAe;AAAA,MACb,OAAS;AAAA,MACT,QAAU;AAAA,MACV,QAAU;AAAA,MACV,SAAW;AAAA,MACX,SAAW;AAAA,IACb;AAAA,IACA,mBAAmB;AAAA,MACjB,OAAS;AAAA,MACT,QAAU;AAAA,MACV,QAAU;AAAA,MACV,SAAW;AAAA,MACX,SAAW;AAAA,IACb;AAAA,IACA,kBAAkB;AAAA,EACpB;AAAA,EACA,OAAS;AAAA,IACP;AAAA,EACF;AAAA,EACA,SAAW;AAAA,IACT,OAAS;AAAA,IACT,cAAc;AAAA,IACd,eAAe;AAAA,IACf,yBAAyB;AAAA,IACzB,sBAAsB;AAAA,IACtB,qBAAqB;AAAA,IACrB,OAAS;AAAA,IACT,MAAQ;AAAA,IACR,cAAc;AAAA,IACd,oBAAoB;AAAA,IACpB,WAAW;AAAA,IACX,gBAAgB;AAAA,IAChB,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,mBAAmB;AAAA,IACnB,OAAS;AAAA,EACX;AAAA,EACA,cAAgB;AAAA,IACd,iBAAiB;AAAA,IACjB,2BAA2B;AAAA,IAC3B,2BAA2B;AAAA,IAC3B,2BAA2B;AAAA,IAC3B,oBAAoB;AAAA,IACpB,yBAAyB;AAAA,IACzB,iBAAiB;AAAA,IACjB,uBAAuB;AAAA,IACvB,iBAAiB;AAAA,IACjB,4BAA4B;AAAA,IAC5B,iBAAiB;AAAA,IACjB,wBAAwB;AAAA,IACxB,0BAA0B;AAAA,IAC1B,+BAA+B;AAAA,IAC/B,OAAS;AAAA,IACT,UAAY;AAAA,IACZ,OAAS;AAAA,IACT,OAAS;AAAA,IACT,aAAe;AAAA,IACf,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,OAAS;AAAA,IACT,mBAAmB;AAAA,IACnB,QAAU;AAAA,IACV,uBAAuB;AAAA,IACvB,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,OAAS;AAAA,IACT,UAAY;AAAA,IACZ,WAAa;AAAA,IACb,mBAAmB;AAAA,IACnB,iBAAiB;AAAA,IACjB,cAAgB;AAAA,IAChB,KAAO;AAAA,IACP,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,QAAU;AAAA,IACV,KAAO;AAAA,IACP,SAAS;AAAA,IACT,kBAAkB;AAAA,IAClB,WAAa;AAAA,IACb,UAAY;AAAA,IACZ,IAAM;AAAA,IACN,aAAa;AAAA,IACb,2BAA2B;AAAA,IAC3B,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,gBAAgB;AAAA,IAChB,QAAU;AAAA,IACV,iBAAiB;AAAA,IACjB,WAAa;AAAA,IACb,QAAU;AAAA,IACV,MAAQ;AAAA,IACR,YAAc;AAAA,IACd,wBAAwB;AAAA,IACxB,KAAO;AAAA,IACP,KAAO;AAAA,EACT;AAAA,EACA,iBAAmB;AAAA,IACjB,4BAA4B;AAAA,IAC5B,yBAAyB;AAAA,IACzB,sBAAsB;AAAA,IACtB,mBAAmB;AAAA,IACnB,oBAAoB;AAAA,IACpB,wBAAwB;AAAA,IACxB,uBAAuB;AAAA,IACvB,uBAAuB;AAAA,IACvB,iBAAiB;AAAA,IACjB,sBAAsB;AAAA,IACtB,gCAAgC;AAAA,IAChC,4BAA4B;AAAA,IAC5B,+BAA+B;AAAA,IAC/B,yBAAyB;AAAA,IACzB,oBAAoB;AAAA,IACpB,mBAAmB;AAAA,IACnB,uBAAuB;AAAA,IACvB,wBAAwB;AAAA,IACxB,4BAA4B;AAAA,IAC5B,YAAY;AAAA,IACZ,KAAO;AAAA,IACP,OAAS;AAAA,IACT,aAAa;AAAA,IACb,oBAAoB;AAAA,IACpB,qBAAqB;AAAA,IACrB,MAAQ;AAAA,IACR,mBAAmB;AAAA,EACrB;AAAA,EACA,kBAAoB;AAAA,IAClB,yBAAyB;AAAA,IACzB,OAAS;AAAA,IACT,aAAa;AAAA,IACb,oBAAoB;AAAA,IACpB,qBAAqB;AAAA,EACvB;AAAA,EACA,SAAW;AAAA,IACT,MAAQ;AAAA,IACR,KAAO;AAAA,EACT;AAAA,EACA,IAAM;AAAA,IACJ,SAAW;AAAA,MACT,OAAS;AAAA,QACP,SAAW;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;;;;;;;;;;;;AC9LA,IAAMA,iBAAiBC,GAAOC,IAAAA;6BACD,CAAC,EAAEC,MAAK,MAAOA,MAAMC,OAAOC,UAAU;;;;;;IAM/D,CAAC,EAAEF,MAAK,MAAOA,MAAMG,YAAYC,KAAK;;8BAEZ,CAAC,EAAEJ,MAAK,MAAOA,MAAMC,OAAOC,UAAU;;;;AAK9DG,IAAAA,UAAU,CAACC,cACfC,wBAACV,gBAAAA;EACCW,YAAW;EACXC,KAAI;EACJC,YAAW;EACXC,WAAW;IACTC,SAAS;IACTR,OAAO;EACT;EACAS,KAAK;EACLC,QAAQ;EACRC,OAAO;IACLH,SAAS;IACTR,OAAO;EACT;EACC,GAAGE;;;;;;;;;;AClBR,IAAMU,qBAAqBC,GAAOC,OAAAA;;;;mBAIf,CAAC,EAAEC,MAAK,MAAOA,MAAMC,YAAY;gBACpC,CAAC,EAAED,MAAK,MAAOA,MAAME,OAAOC,QAAQ;WACzC,CAAC,EAAEH,MAAK,MAAOA,MAAME,OAAOE,UAAU;;;;;;;;cAQnC,CAAC,EAAEJ,MAAK,MAAOA,MAAME,OAAOG,UAAU;;kBAElC,CAAC,EAAEL,MAAK,MAAOA,MAAME,OAAOI,UAAU;;;;;cAK1C,CAAC,EAAEN,MAAK,MAAOA,MAAME,OAAOK,UAAU;;kBAElC,CAAC,EAAEP,MAAK,MAAOA,MAAME,OAAOM,UAAU;;;AAIxD,IAAMC,WAAW,CAAC,EAAEC,UAAU,GAAGC,MAAAA,UAC/BC,yBAACf,oBAAAA;EAAoB,GAAGc;EAAQD;;AAKlC,IAAMG,eAAc,CAAC,EAAEH,UAAUI,OAAOC,WAAW,QAAO,MAAwB;AAChF,aACEH,yBAACI,aAAAA;IAAQC,MAAMF;IAAUD;IAAcI,eAAe;IACpD,cAAAN,yBAACO,QAAAA;MAAMT;;;AAGb;AAKA,IAAMU,WAAW,CAAC,EAAEN,OAAOJ,SAAQ,MAAgD;AACjF,MAAI,CAACA,UAAU;AACb,WAAO;EACT;AACA,aAAOE,yBAACS,gBAAAA;IAAeP;IAAeJ;;AACxC;AAKA,IAAMY,cAAcxB,GAAOyB,KAAAA;;mBAER,CAAC,EAAEvB,MAAK,MAAOA,MAAMwB,OAAO,EAAA,CAAG;;;AAIlD,IAAMC,YAAY,CAAC,EAAEf,UAAUI,OAAO,GAAGH,MAA8B,MAAA;AACrE,MAAI,CAACD,UAAU;AACb,WAAO;EACT;AACA,aACEE,yBAACU,aAAAA;IACCP,UAAS;IACTW,KAAI;IACJC,MAAK;IACLC,cAAYd;IACZe,QAAQ;IACP,GAAGlB;IAEHD;;AAGP;AAIkG,IAE5FoB,WAAU;EACdC,MAAMtB;EACNO,SAASH;EACTmB,MAAMZ;EACNG,OAAOE;AACT;;;ACvFA,IAAMQ,mBAAmBC,GAAOC,SAAQC,KAAK;;;AAI7C,IAAMC,sBAAsBH,GAAOC,SAAQC,KAAK;;aAEnC,CAAC,EAAEE,MAAK,MAAOA,MAAMC,OAAOC,QAAQ;;;AAUjD,IAAMC,oBAAoB,CAAC,EAAEC,IAAIC,SAAQ,MAAyC;AAChF,QAAMC,eAAeF,GAAGG,SAAQ,EAAGC,QAAQ,OAAO,EAAA;AAElD,UAAQF,cAAAA;IAEN,KAAK;AACH,iBAAOG,yBAACC,MAAMC,mBAAmBC,QAAM;QAAEP;;IAE3C,KAAK;AACH,iBAAOI,yBAACC,MAAMG,UAAUD,QAAM;QAAEP;;IAElC,KAAK;AACH,iBAAOI,yBAACC,MAAMI,eAAeF,QAAM;QAAEP;;IAEvC;AACE,aAAOA;EACX;AACF;AAEMU,IAAAA,eAAe,CAAC,EACpBC,WACAC,aACAC,kBAAiB,MAKlB;AACC,QAAM,EAAEC,cAAa,IAAKC,QAAAA;AAC1B,QAAMC,YAAYC,aAAAA;AAElB,SAAON,UAAUO,SAAS,IACtBP,UAAUQ,IAAI,CAACC,SAAAA;AACb,UAAMC,WAAWD,KAAKE;AACtB,UAAMC,oBAAmBH,6BAAMI,mBAAcpB,yBAACqB,eAAAA;MAAUC,MAAK;IAAkBC,CAAAA,IAAAA;AAE/E,UAAMC,sBACJR,KAAKS,sBAAsBT,KAAKS,qBAAqB,IACjDT,KAAKS,mBAAmB3B,SAAQ,IAChCyB;AAEN,UAAMG,aAAahB,cAAcM,KAAKW,SAAS;AAC/C,UAAMC,aAAapB,YAAYqB,KAAK,CAACC,eAAeA,WAAWnC,OAAOqB,KAAKrB,EAAE;AAE7E,UAAMoC,cAAc,UAClBC,0BAAC5C,SAAQ6C,MAAI;MACXtC,IAAIqB,KAAKrB;MACTuC,SAAS,MAAMzB,kBAAkBO,KAAKrB,EAAE;MACxCwC,cAAYT;;YAEZ1B,yBAACZ,SAAQgD,MAAI;UAACC,OAAOX;UACnB,cAAA1B,yBAACiB,UAAAA;YAASqB,OAAM;YAAKC,QAAO;YAAKjB,MAAK;;;QAEvCH,uBACCnB,yBAACd,kBAAAA;UACCmD,OAAM;UACNG,WAAU;UACVC,aAAa;UACbC,cAAc;UAEbvB,UAAAA;QAEDK,CAAAA,IAAAA,0BACFxB,yBAACV,qBAAAA;UACC+C,OAAOb;UACPmB,iBAAgB;UAChBL,OAAM;UACNM,OAAM;UAELpB,UAAAA;QAED,CAAA,IAAA;;;AAIR,WAAOZ,aAAc,CAACA,aAAagB,iBACjC5B,yBAAC6C,MAAAA;MAAKC,KAAI;MACR,cAAA9C,yBAACN,mBAAAA;QAAkBC,IAAIqB,KAAKrB;kBACzBiB,gBACCZ,yBAACZ,SAAQ2D,SAAO;UAACV,OAAOX;UACtB,cAAA1B,yBAAC+B,aAAAA,CAAAA,CAAAA;iBAGH/B,yBAAC+B,aAAAA,CAAAA,CAAAA;;IAPaf,GAAAA,KAAKrB,EAAE,IAWzB;GAEN,IAAA;AACN;AAEA,IAAMqD,gBAAgB7D,GAAO8D,GAAAA;;;;;AAM7B,IAAMC,yBAAyB,CAAC,EAC9B3C,WACAE,kBAAiB,MAIlB;AACC,QAAM,EAAEC,cAAa,IAAKC,QAAAA;AAE1B,SAAOJ,UAAUO,SAAS,IACtBP,UAAUQ,IAAI,CAACC,SAAAA;AACb,UAAMC,WAAWD,KAAKE;AACtB,UAAMC,oBAAmBH,6BAAMI,mBAAcpB,yBAACqB,eAAAA;MAAUC,MAAK;IAAkBC,CAAAA,IAAAA;AAE/E,UAAMC,sBACJR,KAAKS,sBAAsBT,KAAKS,qBAAqB,IACjDT,KAAKS,mBAAmB3B,SAAQ,IAChCyB;AAEN,UAAMG,aAAahB,cAAcM,KAAKW,SAAS;AAC/C,UAAMwB,mBAAmBnC,KAAKoC,kBAAkBpC,KAAKrB;AAErD,eACEK,yBAAC6C,MAAAA;MAAKQ,YAAY;MAAGC,YAAW;MAASR,KAAI;oBAC3Cd,0BAAC5C,SAAQ6C,MAAI;QACXtC,IAAIwD;QACJjB,SAAS,MAAMzB,kBAAkB0C,gBAAAA;QACjChB,cAAYT;;cAEZ1B,yBAACgD,eAAAA;YAAcO,aAAY;YACzB,cAAAvD,yBAACiB,UAAAA;cAASqB,OAAM;cAAKC,QAAO;cAAKjB,MAAK;;;cAExCtB,yBAACwD,YAAAA;YAAWC,YAAY;YAAI/B,UAAAA;;UAC3BP,uBACCnB,yBAACd,kBAAAA;YACCmD,OAAM;YACNG,WAAU;YACVC,aAAa;YACbC,cAAc;YAEbvB,UAAAA;UAEDK,CAAAA,IAAAA,0BACFxB,yBAACV,qBAAAA;YACC+C,OAAOb;YACPmB,iBAAgB;YAChBL,OAAM;YACNM,OAAM;YAELpB,UAAAA;UAED,CAAA,IAAA;;;IA5B+C2B,GAAAA,gBAAAA;GAiC3D,IAAA;AACN;;;;ACnLA,IAAMO,mBAAmBC,GAAsBC,IAAAA;;;qBAG1B,CAAC,EAAEC,MAAK,MAAOA,MAAMC,YAAY;;;;;;IAOzCC,WAAW,MAAA;;AACtB,QAAM,EAAEC,cAAa,IAAKC,QAAAA;AAC1B,QAAM,EACJC,OAAO,EAAEC,KAAI,EAAE,IACbC,iBAAiB,UAAA;AACrB,aACEC,yBAACC,KAAAA;IAAIC,SAAS;IACZ,cAAAC,0BAACd,kBAAAA;MAAiBe,WAAU;MAASC,gBAAe;MAASC,OAAM;MAASC,QAAO;;YACjFP,yBAACQ,OAAAA;UACCC,OAAKX,UAAKY,WAALZ,mBAAaa,QAAOb,KAAKc;UAC9BC,KAAKlB,cAAc;YACjBmB,IAAI;YACJC,gBAAgB;UAClB,CAAA;UACAT,OAAM;UACNC,QAAO;;YAETJ,0BAACa,gBAAAA;;gBACChB,yBAACiB,QAAAA;wBACEtB,cAAc;gBACbmB,IAAI;gBACJC,gBAAgB;cAClB,CAAA;;gBAEFf,yBAACiB,QAAAA;wBACEtB,cAAc;gBACbmB,IAAI;gBACJC,gBAAgB;cAClB,CAAA;;;;;;;AAMZ;;;;;;;;AC1CA,IAAMG,cAAcC,GAAOC,KAAKC,OAAO;;;IAGnC,CAAC,EAAEC,MAAK,MAAOA,MAAMC,YAAYC,KAAK;;;;;;AAO1C,IAAMC,WAAWN,GAAOO,IAAAA;YACZ,CAAC,EAAEJ,MAAK,MAAOA,MAAMK,OAAO,CAAA,CAAE;WAC/B,CAAC,EAAEL,MAAK,MAAOA,MAAMK,OAAO,CAAA,CAAE;;;;;;AAOzC,IAAMC,cAAcT,GAAOC,KAAKS,OAAO;;;;AAKvC,IAAMC,WAAWX,GAAOO,IAAAA;;eAET,CAAC,EAAEJ,MAAK,MAAOA,MAAMK,OAAO,CAAA,CAAE;;;;AAK7C,IAAMI,eAAeZ,GAAOO,IAAAA;;;SAGnB,CAAC,EAAEJ,MAAK,MAAOA,MAAMK,OAAO,CAAA,CAAE;;;;AAIvC,IAAMK,mBAAmBb,GAAOc,UAAAA;;mBAEb,CAAC,EAAEX,MAAK,MAAOA,MAAMK,OAAO,CAAA,CAAE;;AASpCO,IAAAA,UAAU,CAAC,EACtBC,UACAC,kBAAkB,OAClBC,UACA,GAAGC,MACU,MAAA;;AACb,QAAM,EAAEC,cAAa,IAAKC,QAAAA;AAC1B,QAAMC,WAAWC,YAAAA;AACjB,QAAMC,OAAOC,QAAQ,QAAQ,CAACC,UAAUA,MAAMF,IAAI;AAClD,QAAMG,SAASF,QAAQ,UAAU,CAACC,UAAUA,MAAMC,MAAM;AACxD,QAAMC,kBAAkBC,eAAeL,IAAAA;AAEvC,QAAMM,gBAAgB,MAAA;AACpB,UAAMC,cAAc;AACpBT,aAASS,WAAAA;EACX;AAEA,QAAMC,eAAe,MAAA;AACnB,UAAMD,cAAc;AACpBJ,WAAAA;AACAL,aAASS,WAAAA;EACX;AAEA,aACEE,yBAAC1B,MAAAA;IAAM,GAAGY;kBACRe,0BAACjC,KAAKkC,MAAI;;YACRF,yBAAClC,aAAAA;UAAYqC,SAAS;UAAMC,WAAS;UAACC,gBAAe;UACnD,cAAAJ,0BAAC3B,MAAAA;YAAKgC,YAAW;YAASC,KAAK;;kBAC7BP,yBAAC3B,UAAAA;gBAASgC,gBAAe;8BACvBL,yBAACQ,OAAOC,MAAI;kBAACC,SAAS;kBAAGC,UAAU5B,YAAY6B,YAAYrB,IAAAA;;;cAE5DP,sBACCgB,yBAACnB,YAAAA;gBAAWgC,SAAQ;0BAAS5B,YAAYU;uBAEzCK,yBAACc,gBAAAA;gBAAeC,KAAI;0BAAQ9B,YAAYU;;;;;YAK9CM,0BAACzB,aAAAA;UAAYwC,kBAAiB;UAAYC,QAAQ;;gBAChDhB,0BAACvB,UAAAA;cAASwC,WAAU;cAASX,KAAK;cAAGD,YAAW;;oBAC9CN,yBAACnB,YAAAA;kBAAWgC,SAAQ;kBAAQM,YAAW;kBAAOC,eAAc;4BACzDnC,YAAYU;;oBAEfK,yBAACpB,kBAAAA;kBAAiBiC,SAAQ;kBAAKQ,WAAU;4BACtC9B,6BAAM+B;;oBAETtB,yBAACrB,cAAAA;kBACEY,WAAAA,kCAAMgC,UAANhC,mBAAaiC,IAAI,CAACC,aAASzB,yBAAC0B,OAAAA;oBAAqBD,UAAAA,KAAKE;kBAAfF,GAAAA,KAAKG,EAAE;;;;gBAInD5B,yBAAChC,KAAK6D,WAAS,CAAA,CAAA;gBAEf7B,yBAAChC,KAAKyC,MAAI;cAACqB,UAAUjC;wBAClBV,cAAc;gBACbyC,IAAI;gBACJG,gBAAgB;cAClB,CAAA;;gBAGF/B,yBAAChC,KAAKyC,MAAI;cAACI,SAAQ;cAASiB,UAAU/B;cAAciC,OAAM;wBACvD7C,cAAc;gBACbyC,IAAI;gBACJG,gBAAgB;cAClB,CAAA;;;;;;;AAMZ;;;AC9GA,IAAME,uBAAuBC,GAAOC,GAAAA;;cAEtBC,qBAAsB;;;;;sBAKd,CAAC,EAAEC,MAAK,MAAOA,MAAMC,OAAOC,QAAQ;eAC3C,CAAC,EAAEC,SAAQ,MAAQA,WAAW,kBAAkB,mBAAqB;;;IAGhF,CAAC,EAAEH,MAAK,MAAOA,MAAMI,YAAYC,KAAK;;;;AAKpCC,IAAAA,gBAAgB,CAAC,EAAEC,SAASC,mBAAmBC,UAAS,UAC5DC,yBAACd,sBAAAA;EAAqBO,UAAUI;EAC9B,cAAAG,yBAACC,kBAAAA;IACC,cAAAC,0BAACd,KAAAA;MACCe,KAAI;MACJC,aAAa;QACXC,SAAS;QACTC,QAAQ;MACV;MACAC,cAAc;QACZF,SAAS;QACTC,QAAQ;MACV;MACAE,YAAY;QACVH,SAAS;QACTC,QAAQ;MACV;MACAG,eAAe;QACbJ,SAAS;QACTC,QAAQ;MACV;;YAEAN,yBAACU,wBAAAA;UAAuBX;UAAsBD;;YAC9CE,yBAACZ,KAAAA;UAAIoB,YAAY;UAAGL,KAAI;UACtB,cAAAH,yBAACW,SAAAA;YAAQC,iBAAe;;;;;;;;;;AC9ClC,IAAMC,oBAAoB,CAAC,EAAEC,WAAU,MAA0B;AAC/D,QAAMC,QAAQC,GAAAA;AAEd,QAAMC,SAAS;AACf,QAAMC,gBAAgB,IAAIC,KAAKC,KAAKH;AACpC,QAAMI,SAASH,iBAAiB,IAAIJ,aAAa;AAEjD,aACEQ,0BAACC,OAAAA;IAAIC,OAAM;IAAKC,QAAO;IAAKC,SAAQ;;UAClCC,yBAACC,QAAAA;QACC,cAAAN,0BAACO,kBAAAA;UAAeC,IAAG;UAAmBC,IAAG;UAAKC,IAAG;UAAKC,IAAG;UAAOC,IAAG;;gBACjEP,yBAACQ,QAAAA;cAAKd,QAAO;cAAKe,WAAWrB,MAAMsB,OAAOC;;gBAC1CX,yBAACQ,QAAAA;cAAKd,QAAO;cAAOe,WAAWrB,MAAMsB,OAAOE;;;;;UAGhDZ,yBAACa,UAAAA;QAAOC,IAAG;QAAKC,IAAG;QAAKC,GAAG1B;QAAQ2B,QAAO;QAAOC,aAAY;QAAKC,MAAK;;UACvEnB,yBAACa,UAAAA;QACCC,IAAG;QACHC,IAAG;QACHC,GAAG1B;QACH2B,QAAO;QACPC,aAAY;QACZC,MAAK;QACLC,iBAAiB7B;QACjB8B,kBAAkB3B;QAClB4B,WAAU;QACVC,eAAc;;UAEhBvB,yBAACJ,OAAAA;QAAI4B,GAAE;QAAKC,GAAE;QAAK5B,OAAM;QAAKC,QAAO;QAAKC,SAAQ;QAChD,cAAAC,yBAAC0B,QAAAA;UACCP,MAAK;UACLQ,GAAE;;;;;AAKZ;AAEA,IAAMC,YAAYC,GAAOC,IAAAA;;;IAGrB,CAAC,EAAE1C,MAAK,MAAOA,MAAM2C,YAAYC,KAAK;;;;AAK1C,IAAMC,iBAAiB,MAAA;AACrB,QAAM,EAAEC,cAAa,IAAKC,QAAAA;AAC1B,QAAM,EAAEC,SAASC,SAASC,UAAS,IAAKC,iBAAAA;AAExC,QAAMC,eAAeC,gCAAgCC,QAAW;IAC9DC,MAAM,EAACP,mCAASQ;EAClB,CAAA;AAEA,MACEP,WACAC,aACA,EAACF,mCAASQ,YACVJ,aAAaF,aACbE,aAAaH,WACb,CAACG,aAAaK,QACd,CAACL,aAAaK,KAAKC,aACnB;AACA,WAAO;EACT;AAEA,QAAMC,aAAa,IAAIC,KAAKR,aAAaK,KAAKC,WAAW;AACzD,QAAMG,MAAM,oBAAID,KAAAA;AAChB,QAAME,qBAAqBC,SAASJ,YAAYK,aAAAA,CAAAA;AAEhD,QAAMC,qBAAqB,MAAO,KAAK,KAAK;AAC5C,QAAMC,iBAAiBP,WAAWQ,QAAO,IAAKN,IAAIM,QAAO;AAEzD,QAAMC,WACJhE,KAAKiE,KAAKH,iBAAiBD,kBAAuB,KAAA,IAC9C,IACA7D,KAAKiE,KAAKH,iBAAiBD,kBAAAA;AAEjC,aACErD,yBAAC4B,WAAAA;IAAU8B,gBAAe;IAASC,SAAS;IAC1C,cAAA3D,yBAAC4D,aAAAA;MACCC,OAAO3B,cACLgB,qBACI;QACE/C,IAAI;QACJ2D,gBAAgB;UAElB;QACE3D,IAAI;QACJ2D,gBAAgB;SAEtB;QACEC,MAAMC,OAAO,IAAIhB,KAAKR,aAAaK,KAAKC,WAAW,GAAG,KAAA;MACxD,CAAA;MAEFmB,MAAK;MAEL,cAAAjE,yBAACkE,OAAAA;QAAIC,eAAY;QACf,cAAAnE,yBAACd,mBAAAA;UAAkBC,aAAc,KAAKqE,YAAY,MAAO;;;;;AAKnE;;;ACjGA,IAAMY,YAAY,CAACC,UAAAA;AACjB,SAAOA,MAAMC,KAAK,CAACC,GAAGC,MAAAA;AAEpB,UAAMC,YAAYF,EAAEG,YAAY;AAChC,UAAMC,YAAYH,EAAEE,YAAY;AAEhC,QAAID,YAAYE,WAAW;AACzB,aAAO;WACF;AACL,aAAO;IACT;EACF,CAAA;AACF;AAEA,IAAMC,iBAAiBC,GAA4BC,IAAAA;;;;;;;;;;AAiBnD,IAAMC,cAAcF,GAAOC,IAAAA;;;;;;IAMvB,CAAC,EAAEE,MAAK,MAAOA,MAAMC,YAAYC,KAAK;;;;;;AAOpCC,IAAAA,WAAW,CAAC,EAChBC,qBACAC,qBACAC,qBACAC,uBAAsB,MACR;AACd,QAAM,CAACC,mBAAmBC,oBAAAA,IAA8BC,eAAS,KAAA;AACjE,QAAM,EAAEC,WAAU,IAAKC,YAAAA;AACvB,QAAM,EAAEC,SAAQ,IAAKC,YAAAA;AACrB,QAAM,EAAEC,eAAeC,OAAM,IAAKC,QAAAA;AAClC,QAAMC,YAAYC,YAAYH,QAAQ;IACpCI,aAAa;EACf,CAAA;AAEA,QAAMC,oBAAoB,CAACC,gBAAAA;AACzBX,eAAW,gBAAgB;MAAEY,MAAMV;MAAUW,IAAIF;IAAY,CAAA;EAC/D;AAGAG,EAAMC,gBAAU,MAAA;AACdjB,yBAAqB,KAAA;KACpB;IAACI;EAAS,CAAA;AAEb,QAAMc,gCAAgC;IAAItB,GAAAA;IAAwBD,GAAAA;EAAoB,EAACd,KACrF,CAACC,GAAGC,MAAM0B,UAAUU,QAAQb,cAAcxB,EAAEsC,SAAS,GAAGd,cAAcvB,EAAEqC,SAAS,CAAA,CAAA;AAEnF,QAAMC,YAAY1C,UAAUuC,6BAAAA;AAK5B,QAAMI,2BAA2B,CAACC,mBAChCA,eAAeC,OAAmB,CAACC,KAAKC,eAAAA;AACtC,UAAMC,YAAYN,UAAUO,KAAK,CAACC,SAASA,KAAKd,OAAOW,WAAWX,EAAE;AACpE,QAAIY,WAAW;AACbF,UAAIK,KAAKJ,WAAWG,OAAO;QAAE,GAAGF;QAAWI,gBAAgBL,WAAWG;UAASF,SAAAA;IACjF;AACA,WAAOF;EACT,GAAG,CAAA,CAAE;AAKP,QAAMO,2BAA2BV,yBAAyBzB,mBAAAA;AAK1D,QAAMoC,gCAAgC;IACpC;IACA;IACA;IACA;EACD;AACD,QAAMC,yBAAyBtC,oBAAoBuC,OACjD,CAACC,WAAW,CAACH,8BAA8BI,KAAK,CAACR,SAASO,OAAOrB,GAAGuB,SAAST,IAAAA,CAAAA,CAAAA;AAE/E,QAAMU,8BAA8B;IAC/BL,GAAAA;OACAZ,yBAAyBxB,sBAAAA;EAC7B;AAED,aACE0C,0BAAAC,8BAAA;;UACED,0BAACE,SAAAA;;cACCC,yBAACC,UAAAA,CAAAA,CAAAA;cAEDD,yBAACE,SAAAA,CAAAA,CAAAA;cAEDL,0BAAClD,aAAAA;;kBACCqD,yBAACxD,gBAAAA;gBACC2D,KAAI;gBACJC,KAAK;gBACLC,WAAW;kBACTC,SAAS;kBACTxD,OAAO;gBACT;gBACAyD,YAAW;gBACXC,gBAAgB;kBACdF,SAAS;kBACTxD,OAAO;gBACT;gBACA2D,MAAM;gBACNC,aAAa;kBACXJ,SAAS;kBACTxD,OAAO;gBACT;gBACA6D,cAAc;kBACZL,SAAS;kBACTxD,OAAO;gBACT;gBACA8D,YAAY;gBACZC,eAAe;gBAEf,cAAAb,yBAACc,cAAAA;kBACCpC;kBACAqC,aAAa1B;kBACbpB;;;kBAGJ+B,yBAACgB,gBAAAA,CAAAA,CAAAA;kBACDhB,yBAACiB,KAAAA;gBACCC,SAAS;kBACPZ,SAAS;kBACTxD,OAAO;gBACT;gBACAqE,aAAY;gBACZC,aAAa;kBACXd,SAAS;kBACTxD,OAAO;gBACT;gBACAuE,aAAY;gBACZC,SAAS;gBAET,cAAAtB,yBAACuB,SAAAA,CAAAA,CAAAA;;;;cAILvB,yBAACiB,KAAAA;YACCK,SAAS;YACTJ,SAAS;cACPZ,SAAS;cACTxD,OAAO;YACT;YAEA,cAAAkD,yBAACtD,MAAAA;cACC8E,QAAO;cACPC,OAAM;cACNjB,gBAAe;cACfD,YAAW;cACXmB,SAAS,MAAMrE,qBAAqB,CAACD,iBAAAA;wBAEpC,CAACA,wBAAoB4C,yBAAC2B,eAAAA,CAAAA,CAAAA,QAAU3B,yBAAC4B,eAAAA,CAAAA,CAAAA;;;;;UAIxC5B,yBAAC6B,eAAAA;QACCC,SAAS1E;QACTsB,WAAWkB;QACX3B;;;;AAIR;;;;;ACnMM8D,IAAAA,qBAAqB,CAAC,EAAEC,SAAQ,MAAiC;AACrE,QAAMC,aAAaC,aAAa,sBAAsB,CAACC,UAAUA,MAAMC,OAAO;AAC9E,QAAM,CAAC,EAAEA,QAAO,GAAIC,QAAAA,IAAkBC,kBACpCC,SACAC,cACA,MAAMC,KAAKR,UAAAA,CAAAA;AAEb,QAAMS,YAAkBC,cAAO,CAACC,aAAAA;AAC9BP,aAAS;MAAEQ,MAAM;MAAoBD;IAAS,CAAA;EAChD,CAAA;AAEA,QAAME,qBAAqBC,OAAOC,KAAKZ,OAAAA,EAASa,KAC9C,CAACC,WAAWd,QAAQc,MAAO,EAACC,YAAY,KAAA;AA0B1C,MAAIL,oBAAoB;AACtB,UAAMM,eAAeL,OAAOC,KAAKZ,OAAAA,EAASiB,OAAO,CAACC,KAAKC,YAAAA;AACrD,YAAMC,uBAAuBpB,QAAQmB,OAAAA,EAASE;AAE9C,UAAID,sBAAsB;AACxB,cAAME,MAAMtB,QAAQmB,OAAAA,EAASX;AAE7BU,YAAIK,SAAKC,yBAACJ,sBAAAA;UAA+Bd,WAAWA,UAAUa;QAA1BG,GAAAA,GAAAA,CAAAA;MACtC;AAEA,aAAOJ;IACT,GAAG,CAAA,CAAE;AAEL,eACEO,0BAAAC,8BAAA;;QACGV;YACDQ,yBAACG,KAAKC,SAAO,CAAA,CAAA;;;EAGnB;AAEA,SAAOhC;AACT;AAUA,IAAMQ,eAAsB;EAC1BJ,SAAS,CAAA;AACX;AASA,IAAMG,UAAwC,CAACJ,QAAQK,cAAcyB,WACnEC,GAAQ/B,OAAO,CAACgC,eAAAA;AACd,UAAQF,OAAOpB,MAAI;IACjB,KAAK,oBAAoB;AACvBsB,iBAAW/B,QAAQ6B,OAAOrB,QAAQ,EAAEO,UAAU;AAC9C;IACF;IACA;AACE,aAAOgB;EACX;AACF,CAAA;AAMF,IAAM1B,OAAO,CAACL,YAAAA;AACZ,SAAO;IACLA;EACF;AACF;;;;;ACnGA,IAAMgC,mBAAmBC,GAAOC,IAAAA;;;MAG1B,CAAC,EAAEC,MAAK,MAAOA,MAAMC,OAAOC,UAAU;MACtC,CAAC,EAAEF,MAAK,MAAOA,MAAMC,OAAOE,cAAc;;;AAIhD,IAAMC,SAAS,CAAC,EAAEC,qBAAoB,MAAqC;AACzE,QAAM,EAAEC,cAAa,IAAKC,QAAAA;AAE1B,aACEC,0BAACX,kBAAAA;IAAiBY,OAAM;IAAOC,gBAAe;IAC5C,cAAAC,2BAACZ,MAAAA;MACCW,gBAAe;MACfE,YAAW;MACXH,OAAM;MACNI,YAAY;MACZC,eAAe;MACfC,aAAaC;MACbC,cAAcD;MACdE,KAAK;;YAELP,2BAACQ,KAAAA;;gBACCX,0BAACY,YAAAA;cACCC,SAAQ;cACRC,YAAW;cACXC,WAAU;cACVC,WAAU;cACVC,UAAU;cAETnB,UAAAA,cACCD,uBACI;gBACEqB,IAAI;gBACJC,gBAAgB;kBAElB;gBACED,IAAI;gBACJC,gBAAgB;cAClB,CAAA;;gBAGRnB,0BAACY,YAAAA;cACCC,SAAQ;cACRE,WAAU;cACVC,WAAU;cACVP,cAAc;cACdQ,UAAU;cAETnB,UAAAA,cACCD,uBACI;gBACEqB,IAAI;gBACJC,gBAAgB;kBAElB;gBACED,IAAI;gBACJC,gBACE;cACJ,CAAA;;;;YAIVnB,0BAACW,KAAAA;UACC,cAAAX,0BAACoB,YAAAA;YACCnB,OAAM;YACNY,SAAQ;YACRQ,MAAK;YACLC,QAAO;YAENxB,UAAAA,cACCD,uBACI;cACEqB,IAAI;cACJC,gBAAgB;gBAElB;cACED,IAAI;cACJC,gBAAgB;YAClB,CAAA;;;;;;AAOlB;AAEA,IAAMI,eAAe,MAAA;;AACnB,QAAM,EAAEC,QAAO,IAAKC,iBAAAA;AAEpB,QAAM,CAACC,mBAAmBC,oBAAqB,IAAGC,yBAChD,6BACAC,MAAAA;AAGF,QAAMC,eAAeC,QAAQ,oBAAIC,KAAQ,GAAA,CAAA;AAEzC,QAAMC,eAAeC,gCAAgCL,QAAW;IAC9DM,MAAM,EAACX,mCAASY;EAClB,CAAA;AAEAC,+BAAU,MAAA;;AACR,SAAIJ,MAAAA,aAAaK,SAAbL,gBAAAA,IAAmBM,aAAa;AAClCZ,2BAAqBM,aAAaK,KAAKC,WAAW;IACpD;KAEC;KAACN,kBAAaK,SAAbL,mBAAmBM;EAAY,CAAA;AAInC,QAAM1C,uBAAuB2C,QAC3B,EAAChB,mCAASY,YACR,CAACK,OAAOC,OAAOC,QACfjB,qBACAkB,QAAQ,IAAIZ,KAAKN,iBAAoBI,GAAAA,YAAAA,CAAAA;AAGzC,QAAIG,kBAAaK,SAAbL,mBAAmBM,gBAAe1C,sBAAsB;AAC1D,eAAOG,0BAACJ,QAAAA;MAAOC;;EACjB;AAEA,SAAO;AACT;;;;;AC3GA,IAAMgD,UAAU,CAACC,uBAAAA;;AACf,QAAMC,0BAA0BC,QAAQ,WAAW,CAACC,UAAUA,MAAMF,uBAAuB;AAC3F,QAAMG,OAAOC,aAAa,WAAW,CAACF,UAAUA,MAAMC,IAAI;AAC1D,QAAME,cAAcC,iBAAiB,CAACJ,UAAUA,MAAMK,UAAUF,WAAW;AAC3E,QAAM,CAACG,yBAAyBC,0BAAAA,IAAoCC,gBAAe;IACjFC,qBAAqB;MACnB;QACEC,MAAMC;QACNC,WAAW;UACTC,IAAI;UACJC,gBAAgB;QAClB;QACAC,IAAI;QACJZ,aAAa,CAAA;QACba,UAAU;MACZ;MACA;QACEN,MAAMO;QACNL,WAAW;UACTC,IAAI;UACJC,gBAAgB;QAClB;QACAC,IAAI;QACJZ,eAAaA,iBAAYe,gBAAZf,mBAAyBgB,SAAQ,CAAA;QAC9CH,UAAU;MACZ;MACA;QACEN,MAAMU;QACNR,WAAW;UACTC,IAAI;UACJC,gBAAgB;QAClB;QACAC,IAAI;;;QAGJZ,aAAa,CAAA;QACbkB,oBAAoB;QACpBL,UAAU;MACZ;IACD;IACDM,qBAAqB,CAAA;IACrBC,qBAAqB;MACnB;QACER,IAAI;MACN;MACA;QACEA,IAAI;MACN;MACA;QACEA,IAAI;MACN;MACA;QACEA,IAAI;MACN;IACD;IACDS,wBAAwB;MACtB;QACET,IAAI;MACN;IACD;IACDU,WAAW;EACb,CAAA;AACA,QAAMC,yBAA+BC,cAAOrB,wBAAwBG,mBAAmB;AAEvFmB,EAAMC,iBAAU,MAAA;AACd,mBAAeC,uBAAAA;AACb,YAAMC,+BAA+B,MAAMC,sBACzC/B,MACAH,uBAAAA;AAGF,YAAMmC,gCAAgC,MAAMC,gBAC1CR,uBAAuBS,SACvBtC,oBACAC,uBAAAA;AAGFS,iCAA2B,CAACP,WAAW;QACrC,GAAGA;QACHS,qBAAqBwB;QACrBX,qBAAqBS;QACrBN,WAAW;QACb;IACF;AAEAK,yBAAAA;KACC;IACDvB;IACAmB;IACAzB;IACAE;IACAN;IACAC;EACD,CAAA;AAED,SAAOQ;AACT;AAMA,IAAM4B,kBAAkB,OACtBE,wBACAvC,qBAA8B,OAC9BC,4BAAAA;AAEA,QAAMuC,iCAAiC,MAAMC,QAAQC,IACnDH,uBAAuBI,IAAI,CAAC,EAAErC,YAAW,MAAOL,wBAAwBK,WAAAA,CAAAA,CAAAA;AAG1E,QAAM8B,gCAAgCG,uBAAuBK,OAC3D,CAACC,GAAGC,UAAUN,+BAA+BM,KAAAA,EAAOC,SAAS,CAAA;AAG/D,QAAMC,oBAAoBZ,8BAA8Ba,UACtD,CAACC,QAAQA,IAAIhC,OAAO,WAAA;AAGtB,MAAI8B,sBAAsB,IAAI;AAC5B,WAAO,CAAA;EACT;AAEA,QAAMG,kCAA8BC,iBAAAA,SAAUhB,6BAAAA;AAE9Ce,8BAA4BH,iBAAkB,EAACxB,qBAAqBxB,qBAAqB,IAAI;AAE7F,SAAOmD;AACT;AAEA,IAAMhB,wBAAwB,OAC5BkB,wBACApD,4BAAAA;AAEA,QAAMqD,gCAAgC,MAAMb,QAAQC,IAClDW,uBAAuBV,IAAI,CAAC,EAAErC,YAAW,MAAOL,wBAAwBK,WAAAA,CAAAA,CAAAA;AAG1E,QAAM4B,+BAA+BmB,uBAAuBT,OAC1D,CAACC,GAAGC,UAAUQ,8BAA8BR,KAAAA,EAAOC,SAAS,CAAA;AAG9D,SAAOb;AACT;;;ACjJA,IAAM,EAAEqB,SAASC,cAAa,IAAKC;AAEnC,IAAMC,cAAc,MAAA;AAClB,QAAM,EAAEC,cAAa,IAAKC,QAAAA;AAC1B,QAAMC,WAAWC,QAAQ,oBAAoB,CAACC,UAAUA,MAAMC,IAAI;AAClE,QAAM,CAACC,QAAQC,SAAU,IAASC,gBAAQ;AAC1C,QAAM,EAAEC,wBAAuB,IAAKC,iBAAiB,kBAAA;AAErD,QAAM,EAAEC,MAAMC,SAASC,WAAWC,iBAAgB,IAAKC,oBAAAA;AACvD,QAAM,CAACC,SAASC,UAAAA,IAAoBT,gBAAiBX,aAAAA;AAErDqB,EAAMC,iBAAU,MAAA;AACd,QAAIV,yBAAyB;AAC3BW,YAAM,4DAAA,EACHC,KAAK,OAAOC,QAAAA;AACX,YAAI,CAACA,IAAIC,IAAI;AACX;QACF;AAEA,cAAMC,WAAY,MAAMF,IAAIG,KAAI;AAEhC,YAAI,CAACD,SAASE,UAAU;AACtB,gBAAM,IAAIC,MAAAA;QACZ;AAEAV,mBAAWO,SAASE,QAAQ;MAC9B,CAAA,EACCE,MAAM,MAAA;OAIP;IACJ;KACC;IAACnB;EAAwB,CAAA;AAE5BS,EAAMC,iBAAU,MAAA;AACdU,uBAAmB3B,QAAAA,EAAUmB,KAAK,CAACS,OAAAA;AACjC,UAAIA,IAAI;AACNvB,kBAAUuB,EAAAA;MACZ;IACF,CAAA;KACC;IAAC5B;EAAS,CAAA;AAEb,QAAM,EAAE6B,WAAU,IAAKC,YAAAA;AAEvB,QAAM,EACJnB,WAAWoB,eACXC,qBACAC,qBACAC,qBACAC,uBAAsB,IACpBC,QAAQC,yBAAyB1C,eAAemB,OAAAA,CAAAA;AAEpD,QAAMwB,gBAAgBC,aAAa,oBAAoB,CAACrC,UAAUA,MAAMsC,QAAQC,MAAM;AACtF,QAAMC,YAAYhC,mCAASgC;AAC3B1B,EAAMC,iBAAU,MAAA;AACd,QAAIyB,WAAW;AACbb,iBAAW,wCAAwC;QACjDc,mBAAmBL,cAAAA,EAAgBM,IAAI,CAACC,WAAWA,OAAOC,GAAG;QAC7DJ;MACF,CAAA;IACF;KACC;IAACA;IAAWJ;IAAeT;EAAW,CAAA;AAIzC,MAAIE,iBAAiBnB,kBAAkB;AACrC,eAAOmC,0BAACC,KAAKC,SAAO,CAAA,CAAA;EACtB;AAEA,aACEC,2BAACC,iBAAAA;IACE,GAAGzC;IACJN;IACAgD,wBAAwBtC;IACxBuC,oBAAoBhB,yBAAyB1C,eAAemB,OAAAA;;UAE5DiC,0BAACO,WAAAA,CAAAA,CAAAA;UACDP,0BAACQ,oBAAAA;QACC,cAAAR,0BAACS,aAAAA;UAAYC,SAASC;UACpB,cAAAR,2BAACS,KAAAA;YAAIC,YAAW;;kBACdb,0BAACc,eAAAA;0BACE/D,cAAc;kBAAE8B,IAAI;kBAAiBkC,gBAAgB;gBAAkB,CAAA;;kBAE1EZ,2BAACa,MAAAA;gBACCC,QAAO;gBACPC,WAAW;kBACTC,SAAS;kBACTC,OAAO;gBACT;gBACAC,YAAW;;sBAEXrB,0BAACsB,UAAAA;oBACCrC;oBACAC;oBACAC;oBACAC;;sBAEFe,2BAACS,KAAAA;oBACCW,MAAM;oBACNC,UAAS;oBACTC,OAAM;oBACNR,QAAQ;sBACNE,SAAS;sBACTC,OAAO;oBACT;;0BAEApB,0BAAC0B,cAAAA,CAAAA,CAAAA;0BACD1B,0BAAC2B,QAAAA,CAAAA,CAAAA;;;;;;;;;;;AAQjB;AAEA,IAAMC,qBAAqB,MAAA;AACzB,aACE5B,0BAAC6B,cAAAA;IACC,cAAA7B,0BAAClD,aAAAA,CAAAA,CAAAA;;AAGP;AAEA,IAAMwC,2BAA2B,CAC/BwC,uBACAC,yBAAiC,OAAE;AAEnC,MAAI,KAACC,aAAAA,SAAMF,qBAA0B,KAAA,KAACE,aAAAA,SAAMD,sBAAyB,GAAA;AACnE,WAAO;EACT;AAEA,aAAOE,UAAAA,SAAGH,uBAAuBC,sBAAAA;AACnC;",
  "names": ["MainNavWrapper", "styled", "Flex", "theme", "colors", "neutral150", "breakpoints", "large", "MainNav", "props", "_jsx", "alignItems", "tag", "background", "direction", "initial", "top", "zIndex", "width", "MainNavLinkWrapper", "styled", "RouterLink", "theme", "borderRadius", "colors", "neutral0", "neutral500", "neutral600", "neutral100", "primary600", "primary100", "LinkImpl", "children", "props", "_jsx", "TooltipImpl", "label", "position", "Tooltip", "side", "delayDuration", "span", "IconImpl", "AccessibleIcon", "CustomBadge", "Badge", "spaces", "BadgeImpl", "top", "left", "aria-label", "active", "NavLink", "Link", "Icon", "NavLinkBadgeLock", "styled", "NavLink", "Badge", "NavLinkBadgeCounter", "theme", "colors", "neutral0", "GuidedTourTooltip", "to", "children", "normalizedTo", "toString", "replace", "_jsx", "tours", "contentTypeBuilder", "Finish", "apiTokens", "contentManager", "MainNavIcons", "listLinks", "mobileLinks", "handleClickOnLink", "formatMessage", "useIntl", "isDesktop", "useIsDesktop", "length", "map", "link", "LinkIcon", "icon", "badgeContentLock", "licenseOnly", "Lightning", "fill", "undefined", "badgeContentNumeric", "notificationsCount", "labelValue", "intlLabel", "linkMobile", "find", "mobileLink", "LinkElement", "_jsxs", "Link", "onClick", "aria-label", "Icon", "label", "width", "height", "textColor", "paddingLeft", "paddingRight", "backgroundColor", "color", "Flex", "tag", "Tooltip", "IconContainer", "Box", "MainNavBurgerMenuLinks", "navigationTarget", "navigationLink", "paddingTop", "alignItems", "marginRight", "Typography", "marginLeft", "BrandIconWrapper", "styled", "Flex", "theme", "borderRadius", "NavBrand", "formatMessage", "useIntl", "logos", "menu", "useConfiguration", "_jsx", "Box", "padding", "_jsxs", "direction", "justifyContent", "width", "height", "img", "src", "custom", "url", "default", "alt", "id", "defaultMessage", "VisuallyHidden", "span", "MenuTrigger", "styled", "Menu", "Trigger", "theme", "breakpoints", "large", "MenuIcon", "Flex", "spaces", "MenuContent", "Content", "UserInfo", "BadgeWrapper", "StyledTypography", "Typography", "NavUser", "initials", "showDisplayName", "children", "props", "formatMessage", "useIntl", "navigate", "useNavigate", "user", "useAuth", "state", "logout", "userDisplayName", "getDisplayName", "handleProfile", "redirection", "handleLogout", "_jsx", "_jsxs", "Root", "endIcon", "fullWidth", "justifyContent", "alignItems", "gap", "Avatar", "Item", "delayMs", "fallback", "getInitials", "variant", "VisuallyHidden", "tag", "popoverPlacement", "zIndex", "direction", "fontWeight", "textTransform", "textColor", "email", "roles", "map", "role", "Badge", "name", "id", "Separator", "onSelect", "defaultMessage", "color", "NavBurgerMenuWrapper", "styled", "Box", "HEIGHT_TOP_NAVIGATION", "theme", "colors", "neutral0", "$isShown", "breakpoints", "large", "NavBurgerMenu", "isShown", "handleClickOnLink", "listLinks", "_jsx", "ScrollArea", "_jsxs", "tag", "paddingLeft", "initial", "medium", "paddingRight", "paddingTop", "paddingBottom", "MainNavBurgerMenuLinks", "NavUser", "showDisplayName", "CircleProgressBar", "percentage", "theme", "useTheme", "radius", "circumference", "Math", "PI", "offset", "_jsxs", "svg", "width", "height", "viewBox", "_jsx", "defs", "linearGradient", "id", "x1", "y1", "x2", "y2", "stop", "stopColor", "colors", "primary600", "alternative600", "circle", "cx", "cy", "r", "stroke", "strokeWidth", "fill", "strokeDasharray", "strokeDashoffset", "transform", "strokeLinecap", "x", "y", "path", "d", "Container", "styled", "Flex", "breakpoints", "large", "TrialCountdown", "formatMessage", "useIntl", "license", "isError", "isLoading", "useLicenseLimits", "timeLeftData", "useGetLicenseTrialTimeLeftQuery", "undefined", "skip", "isTrial", "data", "trialEndsAt", "targetDate", "Date", "now", "isTargetDateInPast", "isBefore", "startOfToday", "millisecondsPerDay", "timeDifference", "getTime", "daysLeft", "ceil", "justifyContent", "padding", "Tooltip", "label", "defaultMessage", "date", "format", "side", "div", "data-testid", "sortLinks", "links", "sort", "a", "b", "positionA", "position", "positionB", "NavListWrapper", "styled", "Flex", "MenuDetails", "theme", "breakpoints", "large", "LeftMenu", "generalSectionLinks", "pluginsSectionLinks", "topMobileNavigation", "burgerMobileNavigation", "isBurgerMenuShown", "setIsBurgerMenuShown", "useState", "trackUsage", "useTracking", "pathname", "useLocation", "formatMessage", "locale", "useIntl", "formatter", "useCollator", "sensitivity", "handleClickOnLink", "destination", "from", "to", "React", "useEffect", "listLinksAlphabeticallySorted", "compare", "intlLabel", "listLinks", "mapMobileNavigationLinks", "mobileNavLinks", "reduce", "acc", "mobileLink", "linkFound", "find", "link", "push", "navigationLink", "topMobileNavigationLinks", "excludedPluginsFromBurgerMenu", "burgerMenuPluginsLinks", "filter", "plugin", "some", "includes", "burgerMobileNavigationLinks", "_jsxs", "_Fragment", "MainNav", "_jsx", "NavBrand", "Divider", "tag", "gap", "direction", "initial", "alignItems", "justifyContent", "flex", "paddingLeft", "paddingRight", "paddingTop", "paddingBottom", "MainNavIcons", "mobileLinks", "TrialCountdown", "Box", "display", "borderStyle", "borderWidth", "borderColor", "padding", "NavUser", "height", "width", "onClick", "List", "Cross", "NavBurgerMenu", "isShown", "PluginsInitializer", "children", "appPlugins", "useStrapiApp", "state", "plugins", "dispatch", "useReducer", "reducer", "initialState", "init", "setPlugin", "useRef", "pluginId", "type", "hasApluginNotReady", "Object", "keys", "some", "plugin", "isReady", "initializers", "reduce", "acc", "current", "InitializerComponent", "initializer", "key", "push", "_jsx", "_jsxs", "_Fragment", "Page", "Loading", "action", "produce", "draftState", "BannerBackground", "styled", "Flex", "theme", "colors", "primary600", "alternative600", "Banner", "isTrialEndedRecently", "formatMessage", "useIntl", "_jsx", "width", "justifyContent", "_jsxs", "alignItems", "paddingTop", "paddingBottom", "paddingLeft", "RESPONSIVE_DEFAULT_SPACING", "paddingRight", "gap", "Box", "Typography", "variant", "fontWeight", "textColor", "textAlign", "fontSize", "id", "defaultMessage", "LinkButton", "href", "target", "UpsellBanner", "license", "useLicenseLimits", "cachedTrialEndsAt", "setCachedTrialEndsAt", "useScopedPersistentState", "undefined", "sevenDaysAgo", "subDays", "Date", "timeLeftData", "useGetLicenseTrialTimeLeftQuery", "skip", "isTrial", "useEffect", "data", "trialEndsAt", "Boolean", "window", "strapi", "isEE", "isAfter", "useMenu", "shouldUpdateStrapi", "checkUserHasPermissions", "useAuth", "state", "menu", "useStrapiApp", "permissions", "useTypedSelector", "admin_app", "menuWithUserPermissions", "setMenuWithUserPermissions", "useState", "generalSectionLinks", "icon", "House", "intlLabel", "id", "defaultMessage", "to", "position", "ShoppingCart", "marketplace", "main", "Cog", "notificationsCount", "pluginsSectionLinks", "topMobileNavigation", "burgerMobileNavigation", "isLoading", "generalSectionLinksRef", "useRef", "React", "useEffect", "applyMenuPermissions", "authorizedPluginSectionLinks", "getPluginSectionLinks", "authorizedGeneralSectionLinks", "getGeneralLinks", "current", "generalSectionRawLinks", "generalSectionLinksPermissions", "Promise", "all", "map", "filter", "_", "index", "length", "settingsLinkIndex", "findIndex", "obj", "authorizedGeneralLinksClone", "cloneDeep", "pluginsSectionRawLinks", "pluginSectionLinksPermissions", "version", "strapiVersion", "packageInfo", "AdminLayout", "formatMessage", "useIntl", "userInfo", "useAuth", "state", "user", "userId", "setUserId", "useState", "showReleaseNotification", "useConfiguration", "data", "appInfo", "isLoading", "isLoadingAppInfo", "useInformationQuery", "tagName", "setTagName", "React", "useEffect", "fetch", "then", "res", "ok", "response", "json", "tag_name", "Error", "catch", "hashAdminUserEmail", "id", "trackUsage", "useTracking", "isLoadingMenu", "generalSectionLinks", "pluginsSectionLinks", "topMobileNavigation", "burgerMobileNavigation", "useMenu", "checkLatestStrapiVersion", "getAllWidgets", "useStrapiApp", "widgets", "getAll", "projectId", "registeredWidgets", "map", "widget", "uid", "_jsx", "Page", "Loading", "_jsxs", "AppInfoProvider", "latestStrapiReleaseTag", "shouldUpdateStrapi", "NpsSurvey", "PluginsInitializer", "DndProvider", "backend", "HTML5Backend", "Box", "background", "SkipToContent", "defaultMessage", "Flex", "height", "direction", "initial", "large", "alignItems", "LeftMenu", "flex", "overflow", "width", "UpsellBanner", "Outlet", "PrivateAdminLayout", "PrivateRoute", "currentPackageVersion", "latestPublishedVersion", "valid", "lt"]
}
